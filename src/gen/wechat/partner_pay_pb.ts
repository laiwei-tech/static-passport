// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file wechat/partner_pay.proto (package wechat, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_tagger_tagger } from "../tagger/tagger_pb";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file wechat/partner_pay.proto.
 */
export const file_wechat_partner_pay: GenFile = /*@__PURE__*/
  fileDesc("", [file_tagger_tagger, file_google_protobuf_timestamp]);

/**
 * @generated from message wechat.PartnerPay
 */
export type PartnerPay = Message<"wechat.PartnerPay"> & {
};

/**
 * Describes the message wechat.PartnerPay.
 * Use `create(PartnerPaySchema)` to create a new message.
 */
export const PartnerPaySchema: GenMessage<PartnerPay> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0);

/**
 * @generated from message wechat.PartnerPay.ListCertificate
 */
export type PartnerPay_ListCertificate = Message<"wechat.PartnerPay.ListCertificate"> & {
};

/**
 * Describes the message wechat.PartnerPay.ListCertificate.
 * Use `create(PartnerPay_ListCertificateSchema)` to create a new message.
 */
export const PartnerPay_ListCertificateSchema: GenMessage<PartnerPay_ListCertificate> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 0);

/**
 * @generated from message wechat.PartnerPay.ListCertificate.Request
 */
export type PartnerPay_ListCertificate_Request = Message<"wechat.PartnerPay.ListCertificate.Request"> & {
};

/**
 * Describes the message wechat.PartnerPay.ListCertificate.Request.
 * Use `create(PartnerPay_ListCertificate_RequestSchema)` to create a new message.
 */
export const PartnerPay_ListCertificate_RequestSchema: GenMessage<PartnerPay_ListCertificate_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 0, 0);

/**
 * @generated from message wechat.PartnerPay.ListCertificate.Response
 */
export type PartnerPay_ListCertificate_Response = Message<"wechat.PartnerPay.ListCertificate.Response"> & {
  /**
   * @generated from field: repeated wechat.PartnerPay.ListCertificate.Response.Certificate data = 1;
   */
  data: PartnerPay_ListCertificate_Response_Certificate[];
};

/**
 * Describes the message wechat.PartnerPay.ListCertificate.Response.
 * Use `create(PartnerPay_ListCertificate_ResponseSchema)` to create a new message.
 */
export const PartnerPay_ListCertificate_ResponseSchema: GenMessage<PartnerPay_ListCertificate_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 0, 1);

/**
 * @generated from message wechat.PartnerPay.ListCertificate.Response.Certificate
 */
export type PartnerPay_ListCertificate_Response_Certificate = Message<"wechat.PartnerPay.ListCertificate.Response.Certificate"> & {
  /**
   * 证书序列号
   *
   * @generated from field: string serial_no = 1;
   */
  serialNo: string;

  /**
   * 证书有效期开始时间
   *
   * @generated from field: string effective_time = 2;
   */
  effectiveTime: string;

  /**
   * 证书过期时间
   *
   * @generated from field: string expire_time = 3;
   */
  expireTime: string;

  /**
   * 为了保证安全性，微信支付在回调通知和平台证书下载接口中，对关键信息进行了AES-256-GCM加密
   *
   * @generated from field: wechat.PartnerPay.ListCertificate.Response.Certificate.EncryptCertificate encrypt_certificate = 4;
   */
  encryptCertificate?: PartnerPay_ListCertificate_Response_Certificate_EncryptCertificate;
};

/**
 * Describes the message wechat.PartnerPay.ListCertificate.Response.Certificate.
 * Use `create(PartnerPay_ListCertificate_Response_CertificateSchema)` to create a new message.
 */
export const PartnerPay_ListCertificate_Response_CertificateSchema: GenMessage<PartnerPay_ListCertificate_Response_Certificate> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 0, 1, 0);

/**
 * @generated from message wechat.PartnerPay.ListCertificate.Response.Certificate.EncryptCertificate
 */
export type PartnerPay_ListCertificate_Response_Certificate_EncryptCertificate = Message<"wechat.PartnerPay.ListCertificate.Response.Certificate.EncryptCertificate"> & {
  /**
   * 加密所使用的算法，目前可能取值仅为 AEAD_AES_256_GCM
   *
   * @generated from field: string algorithm = 1;
   */
  algorithm: string;

  /**
   * 加密所使用的随机字符串
   *
   * @generated from field: string nonce = 2;
   */
  nonce: string;

  /**
   * 附加数据包（可能为空）
   *
   * @generated from field: string associated_data = 3;
   */
  associatedData: string;

  /**
   * 证书内容密文，解密后会获得证书完整内容
   *
   * @generated from field: string ciphertext = 4;
   */
  ciphertext: string;
};

/**
 * Describes the message wechat.PartnerPay.ListCertificate.Response.Certificate.EncryptCertificate.
 * Use `create(PartnerPay_ListCertificate_Response_Certificate_EncryptCertificateSchema)` to create a new message.
 */
export const PartnerPay_ListCertificate_Response_Certificate_EncryptCertificateSchema: GenMessage<PartnerPay_ListCertificate_Response_Certificate_EncryptCertificate> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 0, 1, 0, 0);

/**
 * @generated from message wechat.PartnerPay.QueryTransaction
 */
export type PartnerPay_QueryTransaction = Message<"wechat.PartnerPay.QueryTransaction"> & {
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.
 * Use `create(PartnerPay_QueryTransactionSchema)` to create a new message.
 */
export const PartnerPay_QueryTransactionSchema: GenMessage<PartnerPay_QueryTransaction> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1);

/**
 * @generated from message wechat.PartnerPay.QueryTransaction.Request
 */
export type PartnerPay_QueryTransaction_Request = Message<"wechat.PartnerPay.QueryTransaction.Request"> & {
  /**
   * @generated from field: string sp_chid = 1;
   */
  spChid: string;

  /**
   * @generated from field: string sub_mchid = 2;
   */
  subMchid: string;

  /**
   * @generated from field: optional string out_trade_no = 3;
   */
  outTradeNo?: string;

  /**
   * @generated from field: optional string transaction_id = 4;
   */
  transactionId?: string;
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.Request.
 * Use `create(PartnerPay_QueryTransaction_RequestSchema)` to create a new message.
 */
export const PartnerPay_QueryTransaction_RequestSchema: GenMessage<PartnerPay_QueryTransaction_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1, 0);

/**
 * @generated from message wechat.PartnerPay.QueryTransaction.Response
 */
export type PartnerPay_QueryTransaction_Response = Message<"wechat.PartnerPay.QueryTransaction.Response"> & {
  /**
   * 服务商应用ID
   *
   * @generated from field: string sp_appid = 1;
   */
  spAppid: string;

  /**
   * 服务商商户号
   *
   * @generated from field: string sp_mchid = 2;
   */
  spMchid: string;

  /**
   * 子商户/二级商户应用ID
   *
   * @generated from field: string sub_appid = 3;
   */
  subAppid: string;

  /**
   * 子商户号/二级商户号
   *
   * @generated from field: string sub_mchid = 4;
   */
  subMchid: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 5;
   */
  outTradeNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: optional string transaction_id = 6;
   */
  transactionId?: string;

  /**
   * 交易类型
   *
   * @generated from field: optional string trade_type = 7;
   */
  tradeType?: string;

  /**
   * 交易状态
   *
   * @generated from field: string trade_state = 8;
   */
  tradeState: string;

  /**
   * 交易状态描述
   *
   * @generated from field: string trade_state_desc = 9;
   */
  tradeStateDesc: string;

  /**
   * 付款银行
   *
   * @generated from field: optional string bank_type = 10;
   */
  bankType?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 11;
   */
  attach?: string;

  /**
   * 支付完成时间
   *
   * @generated from field: optional string success_time = 12;
   */
  successTime?: string;

  /**
   * @generated from field: wechat.PartnerPay.QueryTransaction.Response.Payer payer = 13;
   */
  payer?: PartnerPay_QueryTransaction_Response_Payer;

  /**
   * @generated from field: optional wechat.PartnerPay.QueryTransaction.Response.Amount amount = 14;
   */
  amount?: PartnerPay_QueryTransaction_Response_Amount;

  /**
   * @generated from field: optional wechat.PartnerPay.QueryTransaction.Response.SceneInfo scene_info = 15;
   */
  sceneInfo?: PartnerPay_QueryTransaction_Response_SceneInfo;

  /**
   * @generated from field: repeated wechat.PartnerPay.QueryTransaction.Response.PromotionDetail promotion_detail = 16;
   */
  promotionDetail: PartnerPay_QueryTransaction_Response_PromotionDetail[];
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.Response.
 * Use `create(PartnerPay_QueryTransaction_ResponseSchema)` to create a new message.
 */
export const PartnerPay_QueryTransaction_ResponseSchema: GenMessage<PartnerPay_QueryTransaction_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1, 1);

/**
 * @generated from message wechat.PartnerPay.QueryTransaction.Response.Payer
 */
export type PartnerPay_QueryTransaction_Response_Payer = Message<"wechat.PartnerPay.QueryTransaction.Response.Payer"> & {
  /**
   * @generated from field: string sp_openid = 1;
   */
  spOpenid: string;

  /**
   * @generated from field: string sub_openid = 2;
   */
  subOpenid: string;
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.Response.Payer.
 * Use `create(PartnerPay_QueryTransaction_Response_PayerSchema)` to create a new message.
 */
export const PartnerPay_QueryTransaction_Response_PayerSchema: GenMessage<PartnerPay_QueryTransaction_Response_Payer> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1, 1, 0);

/**
 * 订单金额
 *
 * @generated from message wechat.PartnerPay.QueryTransaction.Response.Amount
 */
export type PartnerPay_QueryTransaction_Response_Amount = Message<"wechat.PartnerPay.QueryTransaction.Response.Amount"> & {
  /**
   * 总金额
   *
   * @generated from field: optional int32 total = 1;
   */
  total?: number;

  /**
   * 用户支付金额
   *
   * @generated from field: optional int32 payer_total = 2;
   */
  payerTotal?: number;

  /**
   * 货币类型
   *
   * @generated from field: optional string currency = 3;
   */
  currency?: string;

  /**
   * 用户支付币种
   *
   * @generated from field: optional string payer_currency = 4;
   */
  payerCurrency?: string;
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.Response.Amount.
 * Use `create(PartnerPay_QueryTransaction_Response_AmountSchema)` to create a new message.
 */
export const PartnerPay_QueryTransaction_Response_AmountSchema: GenMessage<PartnerPay_QueryTransaction_Response_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1, 1, 1);

/**
 * 场景信息
 *
 * @generated from message wechat.PartnerPay.QueryTransaction.Response.SceneInfo
 */
export type PartnerPay_QueryTransaction_Response_SceneInfo = Message<"wechat.PartnerPay.QueryTransaction.Response.SceneInfo"> & {
  /**
   * 商户端设备号
   *
   * @generated from field: optional string device_id = 6;
   */
  deviceId?: string;
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.Response.SceneInfo.
 * Use `create(PartnerPay_QueryTransaction_Response_SceneInfoSchema)` to create a new message.
 */
export const PartnerPay_QueryTransaction_Response_SceneInfoSchema: GenMessage<PartnerPay_QueryTransaction_Response_SceneInfo> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1, 1, 2);

/**
 * 优惠功能
 *
 * @generated from message wechat.PartnerPay.QueryTransaction.Response.PromotionDetail
 */
export type PartnerPay_QueryTransaction_Response_PromotionDetail = Message<"wechat.PartnerPay.QueryTransaction.Response.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string coupon_id = 1;
   */
  couponId: string;

  /**
   * 优惠名称
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * 优惠范围
   *
   * @generated from field: optional string scope = 3;
   */
  scope?: string;

  /**
   * 优惠类型
   *
   * @generated from field: optional string type = 4;
   */
  type?: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int32 amount = 5;
   */
  amount: number;

  /**
   * 活动ID
   *
   * @generated from field: optional string stock_id = 6;
   */
  stockId?: string;

  /**
   * 微信出资
   *
   * @generated from field: optional int32 wechatpay_contribute = 7;
   */
  wechatpayContribute?: number;

  /**
   * 商户出资
   *
   * @generated from field: optional int32 merchant_contribute = 8;
   */
  merchantContribute?: number;

  /**
   * 其他出资
   *
   * @generated from field: optional int32 other_contribute = 9;
   */
  otherContribute?: number;

  /**
   * 优惠币种
   *
   * @generated from field: optional string currency = 10;
   */
  currency?: string;

  /**
   * 单品列表
   *
   * @generated from field: repeated wechat.PartnerPay.QueryTransaction.Response.PromotionDetail.GoodsDetail goods_detail = 11;
   */
  goodsDetail: PartnerPay_QueryTransaction_Response_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.Response.PromotionDetail.
 * Use `create(PartnerPay_QueryTransaction_Response_PromotionDetailSchema)` to create a new message.
 */
export const PartnerPay_QueryTransaction_Response_PromotionDetailSchema: GenMessage<PartnerPay_QueryTransaction_Response_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1, 1, 3);

/**
 * @generated from message wechat.PartnerPay.QueryTransaction.Response.PromotionDetail.GoodsDetail
 */
export type PartnerPay_QueryTransaction_Response_PromotionDetail_GoodsDetail = Message<"wechat.PartnerPay.QueryTransaction.Response.PromotionDetail.GoodsDetail"> & {
  /**
   * 商品编码
   *
   * @generated from field: string goods_id = 1;
   */
  goodsId: string;

  /**
   * 商品数量
   *
   * @generated from field: int32 quantity = 2;
   */
  quantity: number;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 3;
   */
  unitPrice: number;

  /**
   * 商品优惠金额
   *
   * @generated from field: int32 discount_amount = 4;
   */
  discountAmount: number;

  /**
   * 商品备注
   *
   * @generated from field: optional string goods_remark = 5;
   */
  goodsRemark?: string;
};

/**
 * Describes the message wechat.PartnerPay.QueryTransaction.Response.PromotionDetail.GoodsDetail.
 * Use `create(PartnerPay_QueryTransaction_Response_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const PartnerPay_QueryTransaction_Response_PromotionDetail_GoodsDetailSchema: GenMessage<PartnerPay_QueryTransaction_Response_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 1, 1, 3, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction
 */
export type PartnerPay_CreateTransaction = Message<"wechat.PartnerPay.CreateTransaction"> & {
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.
 * Use `create(PartnerPay_CreateTransactionSchema)` to create a new message.
 */
export const PartnerPay_CreateTransactionSchema: GenMessage<PartnerPay_CreateTransaction> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common
 */
export type PartnerPay_CreateTransaction_Common = Message<"wechat.PartnerPay.CreateTransaction.Common"> & {
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.
 * Use `create(PartnerPay_CreateTransaction_CommonSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_CommonSchema: GenMessage<PartnerPay_CreateTransaction_Common> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common.Amount
 */
export type PartnerPay_CreateTransaction_Common_Amount = Message<"wechat.PartnerPay.CreateTransaction.Common.Amount"> & {
  /**
   * 总金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 货币类型
   *
   * @generated from field: optional string currency = 2;
   */
  currency?: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.Amount.
 * Use `create(PartnerPay_CreateTransaction_Common_AmountSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Common_AmountSchema: GenMessage<PartnerPay_CreateTransaction_Common_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common.Payer
 */
export type PartnerPay_CreateTransaction_Common_Payer = Message<"wechat.PartnerPay.CreateTransaction.Common.Payer"> & {
  /**
   * @generated from field: optional string sp_openid = 1;
   */
  spOpenid?: string;

  /**
   * @generated from field: optional string sub_openid = 2;
   */
  subOpenid?: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.Payer.
 * Use `create(PartnerPay_CreateTransaction_Common_PayerSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Common_PayerSchema: GenMessage<PartnerPay_CreateTransaction_Common_Payer> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0, 1);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common.Detail
 */
export type PartnerPay_CreateTransaction_Common_Detail = Message<"wechat.PartnerPay.CreateTransaction.Common.Detail"> & {
  /**
   * 订单原价
   *
   * @generated from field: optional int32 cost_price = 1;
   */
  costPrice?: number;

  /**
   * 商品小票ID
   *
   * @generated from field: optional string invoice_id = 2;
   */
  invoiceId?: string;

  /**
   * @generated from field: repeated wechat.PartnerPay.CreateTransaction.Common.Detail.GoodsDetail goods_detail = 3;
   */
  goodsDetail: PartnerPay_CreateTransaction_Common_Detail_GoodsDetail[];
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.Detail.
 * Use `create(PartnerPay_CreateTransaction_Common_DetailSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Common_DetailSchema: GenMessage<PartnerPay_CreateTransaction_Common_Detail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0, 2);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common.Detail.GoodsDetail
 */
export type PartnerPay_CreateTransaction_Common_Detail_GoodsDetail = Message<"wechat.PartnerPay.CreateTransaction.Common.Detail.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品数量
   *
   * @generated from field: int32 quantity = 4;
   */
  quantity: number;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 5;
   */
  unitPrice: number;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.Detail.GoodsDetail.
 * Use `create(PartnerPay_CreateTransaction_Common_Detail_GoodsDetailSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Common_Detail_GoodsDetailSchema: GenMessage<PartnerPay_CreateTransaction_Common_Detail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0, 2, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common.SceneInfo
 */
export type PartnerPay_CreateTransaction_Common_SceneInfo = Message<"wechat.PartnerPay.CreateTransaction.Common.SceneInfo"> & {
  /**
   * 用户终端 IP
   *
   * @generated from field: string payer_client_ip = 1;
   */
  payerClientIp: string;

  /**
   * 商户端设备号
   *
   * @generated from field: optional string device_id = 2;
   */
  deviceId?: string;

  /**
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.SceneInfo.StoreInfo store_info = 3;
   */
  storeInfo?: PartnerPay_CreateTransaction_Common_SceneInfo_StoreInfo;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.SceneInfo.
 * Use `create(PartnerPay_CreateTransaction_Common_SceneInfoSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Common_SceneInfoSchema: GenMessage<PartnerPay_CreateTransaction_Common_SceneInfo> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0, 3);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common.SceneInfo.StoreInfo
 */
export type PartnerPay_CreateTransaction_Common_SceneInfo_StoreInfo = Message<"wechat.PartnerPay.CreateTransaction.Common.SceneInfo.StoreInfo"> & {
  /**
   * 门店编号
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 门店名称
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * 地区编码
   *
   * @generated from field: optional string area_code = 3;
   */
  areaCode?: string;

  /**
   * 详细地址
   *
   * @generated from field: optional string address = 4;
   */
  address?: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.SceneInfo.StoreInfo.
 * Use `create(PartnerPay_CreateTransaction_Common_SceneInfo_StoreInfoSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Common_SceneInfo_StoreInfoSchema: GenMessage<PartnerPay_CreateTransaction_Common_SceneInfo_StoreInfo> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0, 3, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Common.SettleInfo
 */
export type PartnerPay_CreateTransaction_Common_SettleInfo = Message<"wechat.PartnerPay.CreateTransaction.Common.SettleInfo"> & {
  /**
   * 是否指定分账
   *
   * @generated from field: optional bool profit_sharing = 1;
   */
  profitSharing?: boolean;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Common.SettleInfo.
 * Use `create(PartnerPay_CreateTransaction_Common_SettleInfoSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Common_SettleInfoSchema: GenMessage<PartnerPay_CreateTransaction_Common_SettleInfo> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 0, 4);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Jsapi
 */
export type PartnerPay_CreateTransaction_Jsapi = Message<"wechat.PartnerPay.CreateTransaction.Jsapi"> & {
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Jsapi.
 * Use `create(PartnerPay_CreateTransaction_JsapiSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_JsapiSchema: GenMessage<PartnerPay_CreateTransaction_Jsapi> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 1);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Jsapi.Request
 */
export type PartnerPay_CreateTransaction_Jsapi_Request = Message<"wechat.PartnerPay.CreateTransaction.Jsapi.Request"> & {
  /**
   * 服务商应用ID
   *
   * @generated from field: string sp_appid = 1;
   */
  spAppid: string;

  /**
   * 服务商商户号
   *
   * @generated from field: string sp_mchid = 2;
   */
  spMchid: string;

  /**
   * 子商户/二级商户应用ID
   *
   * @generated from field: string sub_appid = 3;
   */
  subAppid: string;

  /**
   * 子商户号/二级商户号
   *
   * @generated from field: string sub_mchid = 4;
   */
  subMchid: string;

  /**
   * 商品描述
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 6;
   */
  outTradeNo: string;

  /**
   * 交易结束时间
   *
   * @generated from field: optional string time_expire = 7;
   */
  timeExpire?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 8;
   */
  attach?: string;

  /**
   * 通知地址
   *
   * @generated from field: string notify_url = 9;
   */
  notifyUrl: string;

  /**
   * 订单优惠标记
   *
   * @generated from field: optional string goods_tag = 10;
   */
  goodsTag?: string;

  /**
   * 电子发票入口开放标识
   *
   * @generated from field: optional bool support_fapiao = 11;
   */
  supportFapiao?: boolean;

  /**
   * 订单金额
   *
   * @generated from field: wechat.PartnerPay.CreateTransaction.Common.Amount amount = 12;
   */
  amount?: PartnerPay_CreateTransaction_Common_Amount;

  /**
   * 支付者
   *
   * @generated from field: wechat.PartnerPay.CreateTransaction.Common.Payer payer = 13;
   */
  payer?: PartnerPay_CreateTransaction_Common_Payer;

  /**
   * 优惠功能
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.Detail detail = 14;
   */
  detail?: PartnerPay_CreateTransaction_Common_Detail;

  /**
   * 场景信息
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.SceneInfo scene_info = 15;
   */
  sceneInfo?: PartnerPay_CreateTransaction_Common_SceneInfo;

  /**
   * 结算信息
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.SettleInfo settle_info = 16;
   */
  settleInfo?: PartnerPay_CreateTransaction_Common_SettleInfo;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Jsapi.Request.
 * Use `create(PartnerPay_CreateTransaction_Jsapi_RequestSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Jsapi_RequestSchema: GenMessage<PartnerPay_CreateTransaction_Jsapi_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 1, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Jsapi.Response
 */
export type PartnerPay_CreateTransaction_Jsapi_Response = Message<"wechat.PartnerPay.CreateTransaction.Jsapi.Response"> & {
  /**
   * 预支付交易会话标识
   *
   * @generated from field: string prepay_id = 1;
   */
  prepayId: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Jsapi.Response.
 * Use `create(PartnerPay_CreateTransaction_Jsapi_ResponseSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Jsapi_ResponseSchema: GenMessage<PartnerPay_CreateTransaction_Jsapi_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 1, 1);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Jsapi.SignedResponse
 */
export type PartnerPay_CreateTransaction_Jsapi_SignedResponse = Message<"wechat.PartnerPay.CreateTransaction.Jsapi.SignedResponse"> & {
  /**
   * 应用ID
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 时间戳
   *
   * @generated from field: string time_stamp = 2;
   */
  timeStamp: string;

  /**
   * 随机字符串
   *
   * @generated from field: string nonce_str = 3;
   */
  nonceStr: string;

  /**
   * 订单详情扩展字符串
   *
   * @generated from field: string package = 4;
   */
  package: string;

  /**
   * 签名方式
   *
   * @generated from field: string sign_type = 5;
   */
  signType: string;

  /**
   * 签名
   *
   * @generated from field: string pay_sign = 6;
   */
  paySign: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Jsapi.SignedResponse.
 * Use `create(PartnerPay_CreateTransaction_Jsapi_SignedResponseSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Jsapi_SignedResponseSchema: GenMessage<PartnerPay_CreateTransaction_Jsapi_SignedResponse> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 1, 2);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Native
 */
export type PartnerPay_CreateTransaction_Native = Message<"wechat.PartnerPay.CreateTransaction.Native"> & {
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Native.
 * Use `create(PartnerPay_CreateTransaction_NativeSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_NativeSchema: GenMessage<PartnerPay_CreateTransaction_Native> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 2);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Native.Request
 */
export type PartnerPay_CreateTransaction_Native_Request = Message<"wechat.PartnerPay.CreateTransaction.Native.Request"> & {
  /**
   * 服务商应用ID
   *
   * @generated from field: string sp_appid = 1;
   */
  spAppid: string;

  /**
   * 服务商商户号
   *
   * @generated from field: string sp_mchid = 2;
   */
  spMchid: string;

  /**
   * 子商户/二级商户应用ID
   *
   * @generated from field: string sub_appid = 3;
   */
  subAppid: string;

  /**
   * 子商户号/二级商户号
   *
   * @generated from field: string sub_mchid = 4;
   */
  subMchid: string;

  /**
   * 商品描述
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 6;
   */
  outTradeNo: string;

  /**
   * 交易结束时间
   *
   * @generated from field: optional string time_expire = 7;
   */
  timeExpire?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 8;
   */
  attach?: string;

  /**
   * 通知地址
   *
   * @generated from field: string notify_url = 9;
   */
  notifyUrl: string;

  /**
   * 订单优惠标记
   *
   * @generated from field: optional string goods_tag = 10;
   */
  goodsTag?: string;

  /**
   * 电子发票入口开放标识
   *
   * @generated from field: optional bool support_fapiao = 11;
   */
  supportFapiao?: boolean;

  /**
   * 订单金额
   *
   * @generated from field: wechat.PartnerPay.CreateTransaction.Common.Amount amount = 12;
   */
  amount?: PartnerPay_CreateTransaction_Common_Amount;

  /**
   * 优惠功能
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.Detail detail = 13;
   */
  detail?: PartnerPay_CreateTransaction_Common_Detail;

  /**
   * 场景信息
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.SceneInfo scene_info = 14;
   */
  sceneInfo?: PartnerPay_CreateTransaction_Common_SceneInfo;

  /**
   * 结算信息
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.SettleInfo settle_info = 15;
   */
  settleInfo?: PartnerPay_CreateTransaction_Common_SettleInfo;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Native.Request.
 * Use `create(PartnerPay_CreateTransaction_Native_RequestSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Native_RequestSchema: GenMessage<PartnerPay_CreateTransaction_Native_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 2, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.Native.Response
 */
export type PartnerPay_CreateTransaction_Native_Response = Message<"wechat.PartnerPay.CreateTransaction.Native.Response"> & {
  /**
   * 此URL用于生成支付二维码，然后提供给用户扫码支付。
   * 注意：code_url并非固定值，使用时按照URL格式转成二维码即可。
   *
   * @generated from field: string code_url = 1;
   */
  codeUrl: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.Native.Response.
 * Use `create(PartnerPay_CreateTransaction_Native_ResponseSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_Native_ResponseSchema: GenMessage<PartnerPay_CreateTransaction_Native_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 2, 1);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.H5
 */
export type PartnerPay_CreateTransaction_H5 = Message<"wechat.PartnerPay.CreateTransaction.H5"> & {
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.H5.
 * Use `create(PartnerPay_CreateTransaction_H5Schema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_H5Schema: GenMessage<PartnerPay_CreateTransaction_H5> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 3);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.H5.Request
 */
export type PartnerPay_CreateTransaction_H5_Request = Message<"wechat.PartnerPay.CreateTransaction.H5.Request"> & {
  /**
   * 服务商应用ID
   *
   * @generated from field: string sp_appid = 1;
   */
  spAppid: string;

  /**
   * 服务商商户号
   *
   * @generated from field: string sp_mchid = 2;
   */
  spMchid: string;

  /**
   * 子商户/二级商户应用ID
   *
   * @generated from field: string sub_appid = 3;
   */
  subAppid: string;

  /**
   * 子商户号/二级商户号
   *
   * @generated from field: string sub_mchid = 4;
   */
  subMchid: string;

  /**
   * 商品描述
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 6;
   */
  outTradeNo: string;

  /**
   * 交易结束时间
   *
   * @generated from field: optional string time_expire = 7;
   */
  timeExpire?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 8;
   */
  attach?: string;

  /**
   * 通知地址
   *
   * @generated from field: string notify_url = 9;
   */
  notifyUrl: string;

  /**
   * 订单优惠标记
   *
   * @generated from field: optional string goods_tag = 10;
   */
  goodsTag?: string;

  /**
   * 电子发票入口开放标识
   *
   * @generated from field: optional bool support_fapiao = 11;
   */
  supportFapiao?: boolean;

  /**
   * 订单金额
   *
   * @generated from field: wechat.PartnerPay.CreateTransaction.Common.Amount amount = 12;
   */
  amount?: PartnerPay_CreateTransaction_Common_Amount;

  /**
   * 优惠功能
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.Detail detail = 13;
   */
  detail?: PartnerPay_CreateTransaction_Common_Detail;

  /**
   * 场景信息
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.SceneInfo scene_info = 14;
   */
  sceneInfo?: PartnerPay_CreateTransaction_Common_SceneInfo;

  /**
   * 结算信息
   *
   * @generated from field: optional wechat.PartnerPay.CreateTransaction.Common.SettleInfo settle_info = 15;
   */
  settleInfo?: PartnerPay_CreateTransaction_Common_SettleInfo;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.H5.Request.
 * Use `create(PartnerPay_CreateTransaction_H5_RequestSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_H5_RequestSchema: GenMessage<PartnerPay_CreateTransaction_H5_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 3, 0);

/**
 * @generated from message wechat.PartnerPay.CreateTransaction.H5.Response
 */
export type PartnerPay_CreateTransaction_H5_Response = Message<"wechat.PartnerPay.CreateTransaction.H5.Response"> & {
  /**
   * 支付跳转链接
   *
   * @generated from field: string h5_url = 1;
   */
  h5Url: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateTransaction.H5.Response.
 * Use `create(PartnerPay_CreateTransaction_H5_ResponseSchema)` to create a new message.
 */
export const PartnerPay_CreateTransaction_H5_ResponseSchema: GenMessage<PartnerPay_CreateTransaction_H5_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 2, 3, 1);

/**
 * @generated from message wechat.PartnerPay.CloseTransaction
 */
export type PartnerPay_CloseTransaction = Message<"wechat.PartnerPay.CloseTransaction"> & {
};

/**
 * Describes the message wechat.PartnerPay.CloseTransaction.
 * Use `create(PartnerPay_CloseTransactionSchema)` to create a new message.
 */
export const PartnerPay_CloseTransactionSchema: GenMessage<PartnerPay_CloseTransaction> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 3);

/**
 * @generated from message wechat.PartnerPay.CloseTransaction.Request
 */
export type PartnerPay_CloseTransaction_Request = Message<"wechat.PartnerPay.CloseTransaction.Request"> & {
  /**
   * @generated from field: string out_trade_no = 1;
   */
  outTradeNo: string;

  /**
   * 服务商商户号
   *
   * @generated from field: string sp_mchid = 2;
   */
  spMchid: string;

  /**
   * 子商户号/二级商户号
   *
   * @generated from field: string sub_mchid = 3;
   */
  subMchid: string;
};

/**
 * Describes the message wechat.PartnerPay.CloseTransaction.Request.
 * Use `create(PartnerPay_CloseTransaction_RequestSchema)` to create a new message.
 */
export const PartnerPay_CloseTransaction_RequestSchema: GenMessage<PartnerPay_CloseTransaction_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 3, 0);

/**
 * @generated from message wechat.PartnerPay.CloseTransaction.Response
 */
export type PartnerPay_CloseTransaction_Response = Message<"wechat.PartnerPay.CloseTransaction.Response"> & {
};

/**
 * Describes the message wechat.PartnerPay.CloseTransaction.Response.
 * Use `create(PartnerPay_CloseTransaction_ResponseSchema)` to create a new message.
 */
export const PartnerPay_CloseTransaction_ResponseSchema: GenMessage<PartnerPay_CloseTransaction_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 3, 1);

/**
 * @generated from message wechat.PartnerPay.CreateRefund
 */
export type PartnerPay_CreateRefund = Message<"wechat.PartnerPay.CreateRefund"> & {
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.
 * Use `create(PartnerPay_CreateRefundSchema)` to create a new message.
 */
export const PartnerPay_CreateRefundSchema: GenMessage<PartnerPay_CreateRefund> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4);

/**
 * @generated from message wechat.PartnerPay.CreateRefund.Request
 */
export type PartnerPay_CreateRefund_Request = Message<"wechat.PartnerPay.CreateRefund.Request"> & {
  /**
   * 子商户号/二级商户号
   *
   * @generated from field: string sub_mchid = 1;
   */
  subMchid: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: optional string transaction_id = 2;
   */
  transactionId?: string;

  /**
   * 商户订单号
   *
   * @generated from field: optional string out_trade_no = 3;
   */
  outTradeNo?: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 4;
   */
  outRefundNo: string;

  /**
   * 退款原因
   *
   * @generated from field: optional string reason = 5;
   */
  reason?: string;

  /**
   * 退款结果回调url
   *
   * @generated from field: optional string notify_url = 6;
   */
  notifyUrl?: string;

  /**
   * 退款资金来源
   *
   * @generated from field: optional string funds_account = 7;
   */
  fundsAccount?: string;

  /**
   * @generated from field: wechat.PartnerPay.CreateRefund.Request.Amount amount = 8;
   */
  amount?: PartnerPay_CreateRefund_Request_Amount;

  /**
   * 退款商品
   *
   * @generated from field: repeated wechat.PartnerPay.CreateRefund.Request.GoodsDetail goods_detail = 9;
   */
  goodsDetail: PartnerPay_CreateRefund_Request_GoodsDetail[];
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Request.
 * Use `create(PartnerPay_CreateRefund_RequestSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_RequestSchema: GenMessage<PartnerPay_CreateRefund_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 0);

/**
 * 金额信息
 *
 * @generated from message wechat.PartnerPay.CreateRefund.Request.Amount
 */
export type PartnerPay_CreateRefund_Request_Amount = Message<"wechat.PartnerPay.CreateRefund.Request.Amount"> & {
  /**
   * 退款金额
   *
   * @generated from field: int32 refund = 1;
   */
  refund: number;

  /**
   * 退款出资账户及金额
   *
   * @generated from field: repeated wechat.PartnerPay.CreateRefund.Request.Amount.From from = 2;
   */
  from: PartnerPay_CreateRefund_Request_Amount_From[];

  /**
   * 原订单金额
   *
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * 退款币种
   *
   * @generated from field: string currency = 4;
   */
  currency: string;
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Request.Amount.
 * Use `create(PartnerPay_CreateRefund_Request_AmountSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_Request_AmountSchema: GenMessage<PartnerPay_CreateRefund_Request_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 0, 0);

/**
 * @generated from message wechat.PartnerPay.CreateRefund.Request.Amount.From
 */
export type PartnerPay_CreateRefund_Request_Amount_From = Message<"wechat.PartnerPay.CreateRefund.Request.Amount.From"> & {
  /**
   * 出资账户类型
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * 出资金额
   *
   * @generated from field: int32 amount = 2;
   */
  amount: number;
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Request.Amount.From.
 * Use `create(PartnerPay_CreateRefund_Request_Amount_FromSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_Request_Amount_FromSchema: GenMessage<PartnerPay_CreateRefund_Request_Amount_From> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 0, 0, 0);

/**
 * @generated from message wechat.PartnerPay.CreateRefund.Request.GoodsDetail
 */
export type PartnerPay_CreateRefund_Request_GoodsDetail = Message<"wechat.PartnerPay.CreateRefund.Request.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 4;
   */
  unitPrice: number;

  /**
   * 商品退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品退货数量
   *
   * @generated from field: int32 refund_quantity = 6;
   */
  refundQuantity: number;
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Request.GoodsDetail.
 * Use `create(PartnerPay_CreateRefund_Request_GoodsDetailSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_Request_GoodsDetailSchema: GenMessage<PartnerPay_CreateRefund_Request_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 0, 1);

/**
 * @generated from message wechat.PartnerPay.CreateRefund.Response
 */
export type PartnerPay_CreateRefund_Response = Message<"wechat.PartnerPay.CreateRefund.Response"> & {
  /**
   * 微信支付退款单号
   *
   * @generated from field: string refund_id = 1;
   */
  refundId: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 2;
   */
  outRefundNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 3;
   */
  transactionId: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 4;
   */
  outTradeNo: string;

  /**
   * 退款渠道
   *
   * @generated from field: string channel = 5;
   */
  channel: string;

  /**
   * 退款入账账户
   *
   * @generated from field: string user_received_account = 6;
   */
  userReceivedAccount: string;

  /**
   * 退款成功时间
   *
   * @generated from field: optional string success_time = 7;
   */
  successTime?: string;

  /**
   * 退款创建时间
   *
   * @generated from field: string create_time = 8;
   */
  createTime: string;

  /**
   * 退款状态
   *
   * @generated from field: string status = 9;
   */
  status: string;

  /**
   * 资金账户
   *
   * @generated from field: optional string funds_account = 10;
   */
  fundsAccount?: string;

  /**
   * @generated from field: wechat.PartnerPay.CreateRefund.Response.Amount amount = 11;
   */
  amount?: PartnerPay_CreateRefund_Response_Amount;

  /**
   * @generated from field: repeated wechat.PartnerPay.CreateRefund.Response.PromotionDetail promotion_detail = 12;
   */
  promotionDetail: PartnerPay_CreateRefund_Response_PromotionDetail[];
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Response.
 * Use `create(PartnerPay_CreateRefund_ResponseSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_ResponseSchema: GenMessage<PartnerPay_CreateRefund_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 1);

/**
 * 金额信息
 *
 * @generated from message wechat.PartnerPay.CreateRefund.Response.Amount
 */
export type PartnerPay_CreateRefund_Response_Amount = Message<"wechat.PartnerPay.CreateRefund.Response.Amount"> & {
  /**
   * 订单金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 退款金额
   *
   * @generated from field: int32 refund = 2;
   */
  refund: number;

  /**
   * @generated from field: repeated wechat.PartnerPay.CreateRefund.Response.Amount.From from = 3;
   */
  from: PartnerPay_CreateRefund_Response_Amount_From[];

  /**
   * 用户支付金额
   *
   * @generated from field: int32 payer_total = 4;
   */
  payerTotal: number;

  /**
   * 用户退款金额
   *
   * @generated from field: int32 payer_refund = 5;
   */
  payerRefund: number;

  /**
   * 应结退款金额
   *
   * @generated from field: int32 settlement_refund = 6;
   */
  settlementRefund: number;

  /**
   * 应结订单金额
   *
   * @generated from field: int32 settlement_total = 7;
   */
  settlementTotal: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 discount_refund = 8;
   */
  discountRefund: number;

  /**
   * 退款币种
   *
   * @generated from field: string currency = 9;
   */
  currency: string;

  /**
   * 手续费退款金额
   *
   * @generated from field: optional int32 refund_fee = 10;
   */
  refundFee?: number;
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Response.Amount.
 * Use `create(PartnerPay_CreateRefund_Response_AmountSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_Response_AmountSchema: GenMessage<PartnerPay_CreateRefund_Response_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 1, 0);

/**
 * 退款出资账户及金额
 *
 * @generated from message wechat.PartnerPay.CreateRefund.Response.Amount.From
 */
export type PartnerPay_CreateRefund_Response_Amount_From = Message<"wechat.PartnerPay.CreateRefund.Response.Amount.From"> & {
  /**
   * 出资账户类型
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * 出资金额
   *
   * @generated from field: int32 amount = 2;
   */
  amount: number;
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Response.Amount.From.
 * Use `create(PartnerPay_CreateRefund_Response_Amount_FromSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_Response_Amount_FromSchema: GenMessage<PartnerPay_CreateRefund_Response_Amount_From> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 1, 0, 0);

/**
 * 优惠退款信息
 *
 * @generated from message wechat.PartnerPay.CreateRefund.Response.PromotionDetail
 */
export type PartnerPay_CreateRefund_Response_PromotionDetail = Message<"wechat.PartnerPay.CreateRefund.Response.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string promotion_id = 1;
   */
  promotionId: string;

  /**
   * 优惠范围
   *
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * 优惠类型
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int32 amount = 4;
   */
  amount: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品列表
   *
   * @generated from field: repeated wechat.PartnerPay.CreateRefund.Response.PromotionDetail.GoodsDetail goods_detail = 6;
   */
  goodsDetail: PartnerPay_CreateRefund_Response_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Response.PromotionDetail.
 * Use `create(PartnerPay_CreateRefund_Response_PromotionDetailSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_Response_PromotionDetailSchema: GenMessage<PartnerPay_CreateRefund_Response_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 1, 1);

/**
 * @generated from message wechat.PartnerPay.CreateRefund.Response.PromotionDetail.GoodsDetail
 */
export type PartnerPay_CreateRefund_Response_PromotionDetail_GoodsDetail = Message<"wechat.PartnerPay.CreateRefund.Response.PromotionDetail.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 4;
   */
  unitPrice: number;

  /**
   * 商品退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品退货数量
   *
   * @generated from field: int32 refund_quantity = 6;
   */
  refundQuantity: number;
};

/**
 * Describes the message wechat.PartnerPay.CreateRefund.Response.PromotionDetail.GoodsDetail.
 * Use `create(PartnerPay_CreateRefund_Response_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const PartnerPay_CreateRefund_Response_PromotionDetail_GoodsDetailSchema: GenMessage<PartnerPay_CreateRefund_Response_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 4, 1, 1, 0);

/**
 * @generated from message wechat.PartnerPay.QueryRefund
 */
export type PartnerPay_QueryRefund = Message<"wechat.PartnerPay.QueryRefund"> & {
};

/**
 * Describes the message wechat.PartnerPay.QueryRefund.
 * Use `create(PartnerPay_QueryRefundSchema)` to create a new message.
 */
export const PartnerPay_QueryRefundSchema: GenMessage<PartnerPay_QueryRefund> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 5);

/**
 * @generated from message wechat.PartnerPay.QueryRefund.Request
 */
export type PartnerPay_QueryRefund_Request = Message<"wechat.PartnerPay.QueryRefund.Request"> & {
  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 1;
   */
  outRefundNo: string;

  /**
   * 子商户号/二级商户号
   *
   * @generated from field: string sub_mchid = 2;
   */
  subMchid: string;
};

/**
 * Describes the message wechat.PartnerPay.QueryRefund.Request.
 * Use `create(PartnerPay_QueryRefund_RequestSchema)` to create a new message.
 */
export const PartnerPay_QueryRefund_RequestSchema: GenMessage<PartnerPay_QueryRefund_Request> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 5, 0);

/**
 * @generated from message wechat.PartnerPay.QueryRefund.Response
 */
export type PartnerPay_QueryRefund_Response = Message<"wechat.PartnerPay.QueryRefund.Response"> & {
  /**
   * 微信支付退款单号
   *
   * @generated from field: string refund_id = 1;
   */
  refundId: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 2;
   */
  outRefundNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 3;
   */
  transactionId: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 4;
   */
  outTradeNo: string;

  /**
   * 退款渠道
   *
   * @generated from field: string channel = 5;
   */
  channel: string;

  /**
   * 退款入账账户
   *
   * @generated from field: string user_received_account = 6;
   */
  userReceivedAccount: string;

  /**
   * 退款成功时间
   *
   * @generated from field: optional string success_time = 7;
   */
  successTime?: string;

  /**
   * 退款创建时间
   *
   * @generated from field: string create_time = 8;
   */
  createTime: string;

  /**
   * 退款状态
   *
   * @generated from field: string status = 9;
   */
  status: string;

  /**
   * 资金账户
   *
   * @generated from field: optional string funds_account = 10;
   */
  fundsAccount?: string;

  /**
   * 金额信息
   *
   * @generated from field: wechat.PartnerPay.QueryRefund.Response.Amount amount = 11;
   */
  amount?: PartnerPay_QueryRefund_Response_Amount;

  /**
   * 优惠退款信息
   *
   * @generated from field: repeated wechat.PartnerPay.QueryRefund.Response.PromotionDetail promotion_detail = 12;
   */
  promotionDetail: PartnerPay_QueryRefund_Response_PromotionDetail[];
};

/**
 * Describes the message wechat.PartnerPay.QueryRefund.Response.
 * Use `create(PartnerPay_QueryRefund_ResponseSchema)` to create a new message.
 */
export const PartnerPay_QueryRefund_ResponseSchema: GenMessage<PartnerPay_QueryRefund_Response> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 5, 1);

/**
 * @generated from message wechat.PartnerPay.QueryRefund.Response.Amount
 */
export type PartnerPay_QueryRefund_Response_Amount = Message<"wechat.PartnerPay.QueryRefund.Response.Amount"> & {
  /**
   * 订单金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 退款金额
   *
   * @generated from field: int32 refund = 2;
   */
  refund: number;

  /**
   * @generated from field: repeated wechat.PartnerPay.QueryRefund.Response.Amount.From from = 3;
   */
  from: PartnerPay_QueryRefund_Response_Amount_From[];

  /**
   * 用户支付金额
   *
   * @generated from field: int32 payer_total = 4;
   */
  payerTotal: number;

  /**
   * 用户退款金额
   *
   * @generated from field: int32 payer_refund = 5;
   */
  payerRefund: number;

  /**
   * 应结退款金额
   *
   * @generated from field: int32 settlement_refund = 6;
   */
  settlementRefund: number;

  /**
   * 应结订单金额
   *
   * @generated from field: int32 settlement_total = 7;
   */
  settlementTotal: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 discount_refund = 8;
   */
  discountRefund: number;

  /**
   * 退款币种
   *
   * @generated from field: string currency = 9;
   */
  currency: string;

  /**
   * 手续费退款金额
   *
   * @generated from field: optional int32 refund_fee = 10;
   */
  refundFee?: number;
};

/**
 * Describes the message wechat.PartnerPay.QueryRefund.Response.Amount.
 * Use `create(PartnerPay_QueryRefund_Response_AmountSchema)` to create a new message.
 */
export const PartnerPay_QueryRefund_Response_AmountSchema: GenMessage<PartnerPay_QueryRefund_Response_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 5, 1, 0);

/**
 * 退款出资账户及金额
 *
 * @generated from message wechat.PartnerPay.QueryRefund.Response.Amount.From
 */
export type PartnerPay_QueryRefund_Response_Amount_From = Message<"wechat.PartnerPay.QueryRefund.Response.Amount.From"> & {
  /**
   * 出资账户类型
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * 出资金额
   *
   * @generated from field: int32 amount = 2;
   */
  amount: number;
};

/**
 * Describes the message wechat.PartnerPay.QueryRefund.Response.Amount.From.
 * Use `create(PartnerPay_QueryRefund_Response_Amount_FromSchema)` to create a new message.
 */
export const PartnerPay_QueryRefund_Response_Amount_FromSchema: GenMessage<PartnerPay_QueryRefund_Response_Amount_From> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 5, 1, 0, 0);

/**
 * @generated from message wechat.PartnerPay.QueryRefund.Response.PromotionDetail
 */
export type PartnerPay_QueryRefund_Response_PromotionDetail = Message<"wechat.PartnerPay.QueryRefund.Response.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string promotion_id = 1;
   */
  promotionId: string;

  /**
   * 优惠范围
   *
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * 优惠类型
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int32 amount = 4;
   */
  amount: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * @generated from field: repeated wechat.PartnerPay.QueryRefund.Response.PromotionDetail.GoodsDetail goods_detail = 6;
   */
  goodsDetail: PartnerPay_QueryRefund_Response_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.PartnerPay.QueryRefund.Response.PromotionDetail.
 * Use `create(PartnerPay_QueryRefund_Response_PromotionDetailSchema)` to create a new message.
 */
export const PartnerPay_QueryRefund_Response_PromotionDetailSchema: GenMessage<PartnerPay_QueryRefund_Response_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 5, 1, 1);

/**
 * 商品列表
 *
 * @generated from message wechat.PartnerPay.QueryRefund.Response.PromotionDetail.GoodsDetail
 */
export type PartnerPay_QueryRefund_Response_PromotionDetail_GoodsDetail = Message<"wechat.PartnerPay.QueryRefund.Response.PromotionDetail.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 4;
   */
  unitPrice: number;

  /**
   * 商品退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品退货数量
   *
   * @generated from field: int32 refund_quantity = 6;
   */
  refundQuantity: number;
};

/**
 * Describes the message wechat.PartnerPay.QueryRefund.Response.PromotionDetail.GoodsDetail.
 * Use `create(PartnerPay_QueryRefund_Response_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const PartnerPay_QueryRefund_Response_PromotionDetail_GoodsDetailSchema: GenMessage<PartnerPay_QueryRefund_Response_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 5, 1, 1, 0);

/**
 * @generated from message wechat.PartnerPay.Notify
 */
export type PartnerPay_Notify = Message<"wechat.PartnerPay.Notify"> & {
  /**
   * @generated from field: string signature = 1;
   */
  signature: string;

  /**
   * @generated from field: string serial = 2;
   */
  serial: string;

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp: string;

  /**
   * @generated from field: string nonce = 4;
   */
  nonce: string;

  /**
   * @generated from field: string body = 5;
   */
  body: string;
};

/**
 * Describes the message wechat.PartnerPay.Notify.
 * Use `create(PartnerPay_NotifySchema)` to create a new message.
 */
export const PartnerPay_NotifySchema: GenMessage<PartnerPay_Notify> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6);

/**
 * @generated from message wechat.PartnerPay.Notify.Body
 */
export type PartnerPay_Notify_Body = Message<"wechat.PartnerPay.Notify.Body"> & {
  /**
   * 通知ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 通知创建时间
   *
   * @generated from field: string create_time = 2;
   */
  createTime: string;

  /**
   * 通知类型
   *
   * @generated from field: string event_type = 3;
   */
  eventType: string;

  /**
   * 通知数据类型
   *
   * @generated from field: string resource_type = 4;
   */
  resourceType: string;

  /**
   * 通知数据
   *
   * @generated from field: wechat.PartnerPay.Notify.Body.Resource resource = 5;
   */
  resource?: PartnerPay_Notify_Body_Resource;

  /**
   * 回调摘要
   *
   * @generated from field: string summary = 6;
   */
  summary: string;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Body.
 * Use `create(PartnerPay_Notify_BodySchema)` to create a new message.
 */
export const PartnerPay_Notify_BodySchema: GenMessage<PartnerPay_Notify_Body> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 0);

/**
 * @generated from message wechat.PartnerPay.Notify.Body.Resource
 */
export type PartnerPay_Notify_Body_Resource = Message<"wechat.PartnerPay.Notify.Body.Resource"> & {
  /**
   * 加密算法类型
   *
   * @generated from field: string algorithm = 1;
   */
  algorithm: string;

  /**
   * 加密前的对象类型
   *
   * @generated from field: string original_type = 2;
   */
  originalType: string;

  /**
   * 数据密文
   *
   * @generated from field: string ciphertext = 3;
   */
  ciphertext: string;

  /**
   * 附加数据
   *
   * @generated from field: string associated_data = 4;
   */
  associatedData: string;

  /**
   * 随机串
   *
   * @generated from field: string nonce = 5;
   */
  nonce: string;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Body.Resource.
 * Use `create(PartnerPay_Notify_Body_ResourceSchema)` to create a new message.
 */
export const PartnerPay_Notify_Body_ResourceSchema: GenMessage<PartnerPay_Notify_Body_Resource> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 0, 0);

/**
 * @generated from message wechat.PartnerPay.Notify.Transaction
 */
export type PartnerPay_Notify_Transaction = Message<"wechat.PartnerPay.Notify.Transaction"> & {
  /**
   * @generated from field: string sp_appid = 1;
   */
  spAppid: string;

  /**
   * @generated from field: string sp_mchid = 2;
   */
  spMchid: string;

  /**
   * @generated from field: string sub_appid = 3;
   */
  subAppid: string;

  /**
   * @generated from field: string sub_mchid = 4;
   */
  subMchid: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 5;
   */
  outTradeNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 6;
   */
  transactionId: string;

  /**
   * 交易类型
   *
   * @generated from field: string trade_type = 7;
   */
  tradeType: string;

  /**
   * 交易状态
   *
   * @generated from field: string trade_state = 8;
   */
  tradeState: string;

  /**
   * 交易状态描述
   *
   * @generated from field: string trade_state_desc = 9;
   */
  tradeStateDesc: string;

  /**
   * 付款银行
   *
   * @generated from field: string bank_type = 10;
   */
  bankType: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 11;
   */
  attach?: string;

  /**
   * 支付完成时间
   *
   * @generated from field: string success_time = 12;
   */
  successTime: string;

  /**
   * 支付者信息
   *
   * @generated from field: wechat.PartnerPay.Notify.Transaction.Payer payer = 13;
   */
  payer?: PartnerPay_Notify_Transaction_Payer;

  /**
   * 订单金额信息
   *
   * @generated from field: wechat.PartnerPay.Notify.Transaction.Amount amount = 14;
   */
  amount?: PartnerPay_Notify_Transaction_Amount;

  /**
   * 支付场景信息描述
   *
   * @generated from field: optional wechat.PartnerPay.Notify.Transaction.SceneInfo scene_info = 15;
   */
  sceneInfo?: PartnerPay_Notify_Transaction_SceneInfo;

  /**
   * 优惠功能
   *
   * @generated from field: repeated wechat.PartnerPay.Notify.Transaction.PromotionDetail promotion_detail = 16;
   */
  promotionDetail: PartnerPay_Notify_Transaction_PromotionDetail[];
};

/**
 * Describes the message wechat.PartnerPay.Notify.Transaction.
 * Use `create(PartnerPay_Notify_TransactionSchema)` to create a new message.
 */
export const PartnerPay_Notify_TransactionSchema: GenMessage<PartnerPay_Notify_Transaction> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 1);

/**
 * @generated from message wechat.PartnerPay.Notify.Transaction.Payer
 */
export type PartnerPay_Notify_Transaction_Payer = Message<"wechat.PartnerPay.Notify.Transaction.Payer"> & {
  /**
   * @generated from field: string sp_openid = 1;
   */
  spOpenid: string;

  /**
   * @generated from field: string sub_openid = 2;
   */
  subOpenid: string;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Transaction.Payer.
 * Use `create(PartnerPay_Notify_Transaction_PayerSchema)` to create a new message.
 */
export const PartnerPay_Notify_Transaction_PayerSchema: GenMessage<PartnerPay_Notify_Transaction_Payer> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 1, 0);

/**
 * @generated from message wechat.PartnerPay.Notify.Transaction.Amount
 */
export type PartnerPay_Notify_Transaction_Amount = Message<"wechat.PartnerPay.Notify.Transaction.Amount"> & {
  /**
   * 总金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 用户支付金额
   *
   * @generated from field: int32 payer_total = 2;
   */
  payerTotal: number;

  /**
   * 货币类型
   *
   * @generated from field: string currency = 3;
   */
  currency: string;

  /**
   * 用户支付币种
   *
   * @generated from field: string payer_currency = 4;
   */
  payerCurrency: string;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Transaction.Amount.
 * Use `create(PartnerPay_Notify_Transaction_AmountSchema)` to create a new message.
 */
export const PartnerPay_Notify_Transaction_AmountSchema: GenMessage<PartnerPay_Notify_Transaction_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 1, 1);

/**
 * @generated from message wechat.PartnerPay.Notify.Transaction.SceneInfo
 */
export type PartnerPay_Notify_Transaction_SceneInfo = Message<"wechat.PartnerPay.Notify.Transaction.SceneInfo"> & {
  /**
   * 商户端设备号
   *
   * @generated from field: optional string device_id = 1;
   */
  deviceId?: string;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Transaction.SceneInfo.
 * Use `create(PartnerPay_Notify_Transaction_SceneInfoSchema)` to create a new message.
 */
export const PartnerPay_Notify_Transaction_SceneInfoSchema: GenMessage<PartnerPay_Notify_Transaction_SceneInfo> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 1, 2);

/**
 * @generated from message wechat.PartnerPay.Notify.Transaction.PromotionDetail
 */
export type PartnerPay_Notify_Transaction_PromotionDetail = Message<"wechat.PartnerPay.Notify.Transaction.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string coupon_id = 1;
   */
  couponId: string;

  /**
   * 优惠名称
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * 优惠范围
   *
   * @generated from field: optional string scope = 3;
   */
  scope?: string;

  /**
   * 优惠类型
   *
   * @generated from field: optional string type = 4;
   */
  type?: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int64 amount = 5;
   */
  amount: bigint;

  /**
   * 活动ID
   *
   * @generated from field: optional string stock_id = 6;
   */
  stockId?: string;

  /**
   * 微信出资
   *
   * @generated from field: optional int64 wechatpay_contribute = 7;
   */
  wechatpayContribute?: bigint;

  /**
   * 商户出资
   *
   * @generated from field: optional int64 merchant_contribute = 8;
   */
  merchantContribute?: bigint;

  /**
   * 其他出资
   *
   * @generated from field: optional int64 other_contribute = 9;
   */
  otherContribute?: bigint;

  /**
   * 优惠币种
   *
   * @generated from field: optional string currency = 10;
   */
  currency?: string;

  /**
   * @generated from field: repeated wechat.PartnerPay.Notify.Transaction.PromotionDetail.GoodsDetail goods_detail = 11;
   */
  goodsDetail: PartnerPay_Notify_Transaction_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.PartnerPay.Notify.Transaction.PromotionDetail.
 * Use `create(PartnerPay_Notify_Transaction_PromotionDetailSchema)` to create a new message.
 */
export const PartnerPay_Notify_Transaction_PromotionDetailSchema: GenMessage<PartnerPay_Notify_Transaction_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 1, 3);

/**
 * @generated from message wechat.PartnerPay.Notify.Transaction.PromotionDetail.GoodsDetail
 */
export type PartnerPay_Notify_Transaction_PromotionDetail_GoodsDetail = Message<"wechat.PartnerPay.Notify.Transaction.PromotionDetail.GoodsDetail"> & {
  /**
   * 商品编码
   *
   * @generated from field: string goods_id = 1;
   */
  goodsId: string;

  /**
   * 商品数量
   *
   * @generated from field: int64 quantity = 2;
   */
  quantity: bigint;

  /**
   * 商品单价
   *
   * @generated from field: int64 unit_price = 3;
   */
  unitPrice: bigint;

  /**
   * 商品优惠金额
   *
   * @generated from field: int64 discount_amount = 4;
   */
  discountAmount: bigint;

  /**
   * 商品备注
   *
   * @generated from field: optional string goods_remark = 5;
   */
  goodsRemark?: string;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Transaction.PromotionDetail.GoodsDetail.
 * Use `create(PartnerPay_Notify_Transaction_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const PartnerPay_Notify_Transaction_PromotionDetail_GoodsDetailSchema: GenMessage<PartnerPay_Notify_Transaction_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 1, 3, 0);

/**
 * @generated from message wechat.PartnerPay.Notify.Refund
 */
export type PartnerPay_Notify_Refund = Message<"wechat.PartnerPay.Notify.Refund"> & {
  /**
   * @generated from field: string sp_mchid = 1;
   */
  spMchid: string;

  /**
   * @generated from field: string sub_mchid = 2;
   */
  subMchid: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 3;
   */
  outTradeNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 4;
   */
  transactionId: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 5;
   */
  outRefundNo: string;

  /**
   * 微信支付退款单号
   *
   * @generated from field: string refund_id = 6;
   */
  refundId: string;

  /**
   * 退款状态
   *
   * @generated from field: string refund_status = 7;
   */
  refundStatus: string;

  /**
   * 退款成功时间
   *
   * @generated from field: optional string success_time = 8;
   */
  successTime?: string;

  /**
   * 退款入账账户
   *
   * @generated from field: string user_received_account = 9;
   */
  userReceivedAccount: string;

  /**
   * @generated from field: wechat.PartnerPay.Notify.Refund.Amount amount = 10;
   */
  amount?: PartnerPay_Notify_Refund_Amount;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Refund.
 * Use `create(PartnerPay_Notify_RefundSchema)` to create a new message.
 */
export const PartnerPay_Notify_RefundSchema: GenMessage<PartnerPay_Notify_Refund> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 2);

/**
 * @generated from message wechat.PartnerPay.Notify.Refund.Amount
 */
export type PartnerPay_Notify_Refund_Amount = Message<"wechat.PartnerPay.Notify.Refund.Amount"> & {
  /**
   * 订单金额
   *
   * @generated from field: int64 total = 1;
   */
  total: bigint;

  /**
   * 退款金额
   *
   * @generated from field: int64 refund = 2;
   */
  refund: bigint;

  /**
   * 用户支付金额
   *
   * @generated from field: int64 payer_total = 3;
   */
  payerTotal: bigint;

  /**
   * 用户退款金额
   *
   * @generated from field: int64 payer_refund = 4;
   */
  payerRefund: bigint;
};

/**
 * Describes the message wechat.PartnerPay.Notify.Refund.Amount.
 * Use `create(PartnerPay_Notify_Refund_AmountSchema)` to create a new message.
 */
export const PartnerPay_Notify_Refund_AmountSchema: GenMessage<PartnerPay_Notify_Refund_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_partner_pay, 0, 6, 2, 0);

