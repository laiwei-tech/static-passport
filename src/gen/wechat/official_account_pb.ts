// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file wechat/official_account.proto (package wechat, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_tagger_tagger } from "../tagger/tagger_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file wechat/official_account.proto.
 */
export const file_wechat_official_account: GenFile = /*@__PURE__*/
  fileDesc("", [file_tagger_tagger]);

/**
 * @generated from message wechat.OfficialAccount
 */
export type OfficialAccount = Message<"wechat.OfficialAccount"> & {
};

/**
 * Describes the message wechat.OfficialAccount.
 * Use `create(OfficialAccountSchema)` to create a new message.
 */
export const OfficialAccountSchema: GenMessage<OfficialAccount> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0);

/**
 * @generated from message wechat.OfficialAccount.GetStableAccessToken
 */
export type OfficialAccount_GetStableAccessToken = Message<"wechat.OfficialAccount.GetStableAccessToken"> & {
};

/**
 * Describes the message wechat.OfficialAccount.GetStableAccessToken.
 * Use `create(OfficialAccount_GetStableAccessTokenSchema)` to create a new message.
 */
export const OfficialAccount_GetStableAccessTokenSchema: GenMessage<OfficialAccount_GetStableAccessToken> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 0);

/**
 * @generated from message wechat.OfficialAccount.GetStableAccessToken.Request
 */
export type OfficialAccount_GetStableAccessToken_Request = Message<"wechat.OfficialAccount.GetStableAccessToken.Request"> & {
  /**
   * 填写 client_credential
   *
   * @generated from field: string grant_type = 1;
   */
  grantType: string;

  /**
   * 账号唯一凭证，即 AppID，可在「微信公众平台 - 设置 -
   * 开发设置」页中获得。（需要已经成为开发者，且账号没有异常状态）
   *
   * @generated from field: string appid = 2;
   */
  appid: string;

  /**
   * 账号唯一凭证密钥，即 AppSecret，获取方式同 appid
   *
   * @generated from field: string secret = 3;
   */
  secret: string;

  /**
   * 默认使用 false。1. force_refresh = false 时为普通调用模式，access_token
   * 有效期内重复调用该接口不会更新 access_token；2. 当force_refresh = true
   * 时为强制刷新模式，会导致上次获取的 access_token 失效，并返回新的
   * access_token
   *
   * @generated from field: optional bool force_refresh = 4;
   */
  forceRefresh?: boolean;
};

/**
 * Describes the message wechat.OfficialAccount.GetStableAccessToken.Request.
 * Use `create(OfficialAccount_GetStableAccessToken_RequestSchema)` to create a new message.
 */
export const OfficialAccount_GetStableAccessToken_RequestSchema: GenMessage<OfficialAccount_GetStableAccessToken_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 0, 0);

/**
 * @generated from message wechat.OfficialAccount.GetStableAccessToken.Response
 */
export type OfficialAccount_GetStableAccessToken_Response = Message<"wechat.OfficialAccount.GetStableAccessToken.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 获取到的凭证
   *
   * @generated from field: string access_token = 3;
   */
  accessToken: string;

  /**
   * 凭证有效时间，单位：秒。目前是7200秒之内的值。
   *
   * @generated from field: int32 expires_in = 4;
   */
  expiresIn: number;
};

/**
 * Describes the message wechat.OfficialAccount.GetStableAccessToken.Response.
 * Use `create(OfficialAccount_GetStableAccessToken_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_GetStableAccessToken_ResponseSchema: GenMessage<OfficialAccount_GetStableAccessToken_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 0, 1);

/**
 * @generated from message wechat.OfficialAccount.GetUser
 */
export type OfficialAccount_GetUser = Message<"wechat.OfficialAccount.GetUser"> & {
};

/**
 * Describes the message wechat.OfficialAccount.GetUser.
 * Use `create(OfficialAccount_GetUserSchema)` to create a new message.
 */
export const OfficialAccount_GetUserSchema: GenMessage<OfficialAccount_GetUser> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 1);

/**
 * @generated from message wechat.OfficialAccount.GetUser.Request
 */
export type OfficialAccount_GetUser_Request = Message<"wechat.OfficialAccount.GetUser.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * 上一批列表的最后一个OPENID，不填默认从头开始拉取
   *
   * @generated from field: string next_openid = 2;
   */
  nextOpenid: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetUser.Request.
 * Use `create(OfficialAccount_GetUser_RequestSchema)` to create a new message.
 */
export const OfficialAccount_GetUser_RequestSchema: GenMessage<OfficialAccount_GetUser_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 1, 0);

/**
 * @generated from message wechat.OfficialAccount.GetUser.Response
 */
export type OfficialAccount_GetUser_Response = Message<"wechat.OfficialAccount.GetUser.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 关注该公众账号的总用户数
   *
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * 拉取的OPENID个数，最大值为10000
   *
   * @generated from field: int32 count = 4;
   */
  count: number;

  /**
   * @generated from field: wechat.OfficialAccount.GetUser.Response.Data data = 5;
   */
  data?: OfficialAccount_GetUser_Response_Data;

  /**
   * 拉取列表的最后一个用户的OPENID
   *
   * @generated from field: string next_openid = 6;
   */
  nextOpenid: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetUser.Response.
 * Use `create(OfficialAccount_GetUser_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_GetUser_ResponseSchema: GenMessage<OfficialAccount_GetUser_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 1, 1);

/**
 * 列表数据，OPENID的列表
 *
 * @generated from message wechat.OfficialAccount.GetUser.Response.Data
 */
export type OfficialAccount_GetUser_Response_Data = Message<"wechat.OfficialAccount.GetUser.Response.Data"> & {
  /**
   * @generated from field: repeated string openid = 1;
   */
  openid: string[];
};

/**
 * Describes the message wechat.OfficialAccount.GetUser.Response.Data.
 * Use `create(OfficialAccount_GetUser_Response_DataSchema)` to create a new message.
 */
export const OfficialAccount_GetUser_Response_DataSchema: GenMessage<OfficialAccount_GetUser_Response_Data> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 1, 1, 0);

/**
 * @generated from message wechat.OfficialAccount.GetUserInfo
 */
export type OfficialAccount_GetUserInfo = Message<"wechat.OfficialAccount.GetUserInfo"> & {
};

/**
 * Describes the message wechat.OfficialAccount.GetUserInfo.
 * Use `create(OfficialAccount_GetUserInfoSchema)` to create a new message.
 */
export const OfficialAccount_GetUserInfoSchema: GenMessage<OfficialAccount_GetUserInfo> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 2);

/**
 * @generated from message wechat.OfficialAccount.GetUserInfo.Request
 */
export type OfficialAccount_GetUserInfo_Request = Message<"wechat.OfficialAccount.GetUserInfo.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * 用户的标识
   *
   * @generated from field: string openid = 2;
   */
  openid: string;

  /**
   * 返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语
   *
   * @generated from field: string lang = 3;
   */
  lang: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetUserInfo.Request.
 * Use `create(OfficialAccount_GetUserInfo_RequestSchema)` to create a new message.
 */
export const OfficialAccount_GetUserInfo_RequestSchema: GenMessage<OfficialAccount_GetUserInfo_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 2, 0);

/**
 * @generated from message wechat.OfficialAccount.GetUserInfo.Response
 */
export type OfficialAccount_GetUserInfo_Response = Message<"wechat.OfficialAccount.GetUserInfo.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。
   *
   * @generated from field: int32 subscribe = 3;
   */
  subscribe: number;

  /**
   * 用户的标识，对当前公众号唯一
   *
   * @generated from field: string openid = 4;
   */
  openid: string;

  /**
   * 用户的语言，简体中文为zh_CN
   *
   * @generated from field: string language = 5;
   */
  language: string;

  /**
   * 用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间
   *
   * @generated from field: int32 subscribe_time = 6;
   */
  subscribeTime: number;

  /**
   * 只有在用户将公众号绑定到微信开放平台账号后，才会出现该字段。
   *
   * @generated from field: optional string unionid = 7;
   */
  unionid?: string;

  /**
   * 公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
   *
   * @generated from field: string remark = 8;
   */
  remark: string;

  /**
   * 用户所在的分组ID（兼容旧的用户分组接口）
   *
   * @generated from field: int32 groupid = 9;
   */
  groupid: number;

  /**
   * 用户被打上的标签ID列表
   *
   * @generated from field: repeated int32 tagid_list = 10;
   */
  tagidList: number[];

  /**
   * 返回用户关注的渠道来源，ADD_SCENE_SEARCH
   * 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION
   * 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE
   * 扫描二维码，ADD_SCENE_PROFILE_LINK
   * 图文页内名称点击，ADD_SCENE_PROFILE_ITEM
   * 图文页右上角菜单，ADD_SCENE_PAID
   * 支付后关注，ADD_SCENE_WECHAT_ADVERTISEMENT 微信广告，ADD_SCENE_REPRINT
   * 他人转载 ,ADD_SCENE_LIVESTREAM 视频号直播，ADD_SCENE_CHANNELS 视频号 ,
   * ADD_SCENE_OTHERS 其他
   *
   * @generated from field: string subscribe_scene = 11;
   */
  subscribeScene: string;

  /**
   * 二维码扫码场景（开发者自定义）
   *
   * @generated from field: int32 qr_scene = 12;
   */
  qrScene: number;

  /**
   * 二维码扫码场景描述（开发者自定义）
   *
   * @generated from field: string qr_scene_str = 13;
   */
  qrSceneStr: string;

  /**
   * @generated from field: string nickname = 14;
   */
  nickname: string;

  /**
   * @generated from field: int32 sex = 15;
   */
  sex: number;

  /**
   * @generated from field: string city = 16;
   */
  city: string;

  /**
   * @generated from field: string province = 17;
   */
  province: string;

  /**
   * @generated from field: string country = 18;
   */
  country: string;

  /**
   * @generated from field: string headimgurl = 19;
   */
  headimgurl: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetUserInfo.Response.
 * Use `create(OfficialAccount_GetUserInfo_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_GetUserInfo_ResponseSchema: GenMessage<OfficialAccount_GetUserInfo_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 2, 1);

/**
 * @generated from message wechat.OfficialAccount.BatchGetUserInfo
 */
export type OfficialAccount_BatchGetUserInfo = Message<"wechat.OfficialAccount.BatchGetUserInfo"> & {
};

/**
 * Describes the message wechat.OfficialAccount.BatchGetUserInfo.
 * Use `create(OfficialAccount_BatchGetUserInfoSchema)` to create a new message.
 */
export const OfficialAccount_BatchGetUserInfoSchema: GenMessage<OfficialAccount_BatchGetUserInfo> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 3);

/**
 * @generated from message wechat.OfficialAccount.BatchGetUserInfo.Request
 */
export type OfficialAccount_BatchGetUserInfo_Request = Message<"wechat.OfficialAccount.BatchGetUserInfo.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: repeated wechat.OfficialAccount.BatchGetUserInfo.Request.UserList user_list = 2;
   */
  userList: OfficialAccount_BatchGetUserInfo_Request_UserList[];
};

/**
 * Describes the message wechat.OfficialAccount.BatchGetUserInfo.Request.
 * Use `create(OfficialAccount_BatchGetUserInfo_RequestSchema)` to create a new message.
 */
export const OfficialAccount_BatchGetUserInfo_RequestSchema: GenMessage<OfficialAccount_BatchGetUserInfo_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 3, 0);

/**
 * @generated from message wechat.OfficialAccount.BatchGetUserInfo.Request.UserList
 */
export type OfficialAccount_BatchGetUserInfo_Request_UserList = Message<"wechat.OfficialAccount.BatchGetUserInfo.Request.UserList"> & {
  /**
   * 用户的标识
   *
   * @generated from field: string openid = 1;
   */
  openid: string;

  /**
   * 语言
   *
   * @generated from field: string lang = 2;
   */
  lang: string;
};

/**
 * Describes the message wechat.OfficialAccount.BatchGetUserInfo.Request.UserList.
 * Use `create(OfficialAccount_BatchGetUserInfo_Request_UserListSchema)` to create a new message.
 */
export const OfficialAccount_BatchGetUserInfo_Request_UserListSchema: GenMessage<OfficialAccount_BatchGetUserInfo_Request_UserList> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 3, 0, 0);

/**
 * @generated from message wechat.OfficialAccount.BatchGetUserInfo.Response
 */
export type OfficialAccount_BatchGetUserInfo_Response = Message<"wechat.OfficialAccount.BatchGetUserInfo.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 用户信息列表
   *
   * @generated from field: repeated wechat.OfficialAccount.BatchGetUserInfo.Response.UserInfo user_info_list = 3;
   */
  userInfoList: OfficialAccount_BatchGetUserInfo_Response_UserInfo[];
};

/**
 * Describes the message wechat.OfficialAccount.BatchGetUserInfo.Response.
 * Use `create(OfficialAccount_BatchGetUserInfo_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_BatchGetUserInfo_ResponseSchema: GenMessage<OfficialAccount_BatchGetUserInfo_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 3, 1);

/**
 * @generated from message wechat.OfficialAccount.BatchGetUserInfo.Response.UserInfo
 */
export type OfficialAccount_BatchGetUserInfo_Response_UserInfo = Message<"wechat.OfficialAccount.BatchGetUserInfo.Response.UserInfo"> & {
  /**
   * 用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。
   *
   * @generated from field: int32 subscribe = 3;
   */
  subscribe: number;

  /**
   * 用户的标识，对当前公众号唯一
   *
   * @generated from field: string openid = 4;
   */
  openid: string;

  /**
   * 用户的语言，简体中文为zh_CN
   *
   * @generated from field: string language = 5;
   */
  language: string;

  /**
   * 用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间
   *
   * @generated from field: int32 subscribe_time = 6;
   */
  subscribeTime: number;

  /**
   * 只有在用户将公众号绑定到微信开放平台账号后，才会出现该字段。
   *
   * @generated from field: optional string unionid = 7;
   */
  unionid?: string;

  /**
   * 公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
   *
   * @generated from field: string remark = 8;
   */
  remark: string;

  /**
   * 用户所在的分组ID（兼容旧的用户分组接口）
   *
   * @generated from field: int32 groupid = 9;
   */
  groupid: number;

  /**
   * 用户被打上的标签ID列表
   *
   * @generated from field: repeated int32 tagid_list = 10;
   */
  tagidList: number[];

  /**
   * 返回用户关注的渠道来源，ADD_SCENE_SEARCH
   * 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION
   * 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE
   * 扫描二维码，ADD_SCENE_PROFILE_LINK
   * 图文页内名称点击，ADD_SCENE_PROFILE_ITEM
   * 图文页右上角菜单，ADD_SCENE_PAID
   * 支付后关注，ADD_SCENE_WECHAT_ADVERTISEMENT
   * 微信广告，ADD_SCENE_REPRINT 他人转载 ,ADD_SCENE_LIVESTREAM
   * 视频号直播，ADD_SCENE_CHANNELS 视频号 , ADD_SCENE_OTHERS 其他
   *
   * @generated from field: string subscribe_scene = 11;
   */
  subscribeScene: string;

  /**
   * 二维码扫码场景（开发者自定义）
   *
   * @generated from field: int32 qr_scene = 12;
   */
  qrScene: number;

  /**
   * 二维码扫码场景描述（开发者自定义）
   *
   * @generated from field: string qr_scene_str = 13;
   */
  qrSceneStr: string;

  /**
   * @generated from field: string nickname = 14;
   */
  nickname: string;

  /**
   * @generated from field: int32 sex = 15;
   */
  sex: number;

  /**
   * @generated from field: string city = 16;
   */
  city: string;

  /**
   * @generated from field: string province = 17;
   */
  province: string;

  /**
   * @generated from field: string country = 18;
   */
  country: string;

  /**
   * @generated from field: string headimgurl = 19;
   */
  headimgurl: string;
};

/**
 * Describes the message wechat.OfficialAccount.BatchGetUserInfo.Response.UserInfo.
 * Use `create(OfficialAccount_BatchGetUserInfo_Response_UserInfoSchema)` to create a new message.
 */
export const OfficialAccount_BatchGetUserInfo_Response_UserInfoSchema: GenMessage<OfficialAccount_BatchGetUserInfo_Response_UserInfo> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 3, 1, 0);

/**
 * @generated from message wechat.OfficialAccount.GetAllPrivateTemplate
 */
export type OfficialAccount_GetAllPrivateTemplate = Message<"wechat.OfficialAccount.GetAllPrivateTemplate"> & {
};

/**
 * Describes the message wechat.OfficialAccount.GetAllPrivateTemplate.
 * Use `create(OfficialAccount_GetAllPrivateTemplateSchema)` to create a new message.
 */
export const OfficialAccount_GetAllPrivateTemplateSchema: GenMessage<OfficialAccount_GetAllPrivateTemplate> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 4);

/**
 * @generated from message wechat.OfficialAccount.GetAllPrivateTemplate.Request
 */
export type OfficialAccount_GetAllPrivateTemplate_Request = Message<"wechat.OfficialAccount.GetAllPrivateTemplate.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetAllPrivateTemplate.Request.
 * Use `create(OfficialAccount_GetAllPrivateTemplate_RequestSchema)` to create a new message.
 */
export const OfficialAccount_GetAllPrivateTemplate_RequestSchema: GenMessage<OfficialAccount_GetAllPrivateTemplate_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 4, 0);

/**
 * @generated from message wechat.OfficialAccount.GetAllPrivateTemplate.Response
 */
export type OfficialAccount_GetAllPrivateTemplate_Response = Message<"wechat.OfficialAccount.GetAllPrivateTemplate.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 模板列表
   *
   * @generated from field: repeated wechat.OfficialAccount.GetAllPrivateTemplate.Response.Template template_list = 3;
   */
  templateList: OfficialAccount_GetAllPrivateTemplate_Response_Template[];
};

/**
 * Describes the message wechat.OfficialAccount.GetAllPrivateTemplate.Response.
 * Use `create(OfficialAccount_GetAllPrivateTemplate_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_GetAllPrivateTemplate_ResponseSchema: GenMessage<OfficialAccount_GetAllPrivateTemplate_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 4, 1);

/**
 * @generated from message wechat.OfficialAccount.GetAllPrivateTemplate.Response.Template
 */
export type OfficialAccount_GetAllPrivateTemplate_Response_Template = Message<"wechat.OfficialAccount.GetAllPrivateTemplate.Response.Template"> & {
  /**
   * 模板ID
   *
   * @generated from field: string template_id = 3;
   */
  templateId: string;

  /**
   * 模板标题
   *
   * @generated from field: string title = 4;
   */
  title: string;

  /**
   * 模板所属行业的一级行业
   *
   * @generated from field: string primary_industry = 5;
   */
  primaryIndustry: string;

  /**
   * 模板所属行业的二级行业
   *
   * @generated from field: string deputy_industry = 6;
   */
  deputyIndustry: string;

  /**
   * 模板内容
   *
   * @generated from field: string content = 7;
   */
  content: string;

  /**
   * 模板示例
   *
   * @generated from field: string example = 8;
   */
  example: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetAllPrivateTemplate.Response.Template.
 * Use `create(OfficialAccount_GetAllPrivateTemplate_Response_TemplateSchema)` to create a new message.
 */
export const OfficialAccount_GetAllPrivateTemplate_Response_TemplateSchema: GenMessage<OfficialAccount_GetAllPrivateTemplate_Response_Template> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 4, 1, 0);

/**
 * @generated from message wechat.OfficialAccount.SendTemplateMessage
 */
export type OfficialAccount_SendTemplateMessage = Message<"wechat.OfficialAccount.SendTemplateMessage"> & {
};

/**
 * Describes the message wechat.OfficialAccount.SendTemplateMessage.
 * Use `create(OfficialAccount_SendTemplateMessageSchema)` to create a new message.
 */
export const OfficialAccount_SendTemplateMessageSchema: GenMessage<OfficialAccount_SendTemplateMessage> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 5);

/**
 * @generated from message wechat.OfficialAccount.SendTemplateMessage.Request
 */
export type OfficialAccount_SendTemplateMessage_Request = Message<"wechat.OfficialAccount.SendTemplateMessage.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * 接收者openid
   *
   * @generated from field: string touser = 2;
   */
  touser: string;

  /**
   * 模板ID
   *
   * @generated from field: string template_id = 3;
   */
  templateId: string;

  /**
   * 模板跳转链接（海外账号没有跳转能力）
   *
   * @generated from field: optional string url = 4;
   */
  url?: string;

  /**
   * @generated from field: optional wechat.OfficialAccount.SendTemplateMessage.Request.MiniProgram miniprogram = 5;
   */
  miniprogram?: OfficialAccount_SendTemplateMessage_Request_MiniProgram;

  /**
   * @generated from field: map<string, wechat.OfficialAccount.SendTemplateMessage.Request.Data> data = 6;
   */
  data: { [key: string]: OfficialAccount_SendTemplateMessage_Request_Data };

  /**
   * 防重入id。对于同一个openid + client_msg_id,
   * 只发送一条消息,10分钟有效,超过10分钟不保证效果。若无防重入需求，可不填
   *
   * @generated from field: optional string client_msg_id = 7;
   */
  clientMsgId?: string;
};

/**
 * Describes the message wechat.OfficialAccount.SendTemplateMessage.Request.
 * Use `create(OfficialAccount_SendTemplateMessage_RequestSchema)` to create a new message.
 */
export const OfficialAccount_SendTemplateMessage_RequestSchema: GenMessage<OfficialAccount_SendTemplateMessage_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 5, 0);

/**
 * 跳小程序所需数据，不需跳小程序可不用传该数据
 *
 * @generated from message wechat.OfficialAccount.SendTemplateMessage.Request.MiniProgram
 */
export type OfficialAccount_SendTemplateMessage_Request_MiniProgram = Message<"wechat.OfficialAccount.SendTemplateMessage.Request.MiniProgram"> & {
  /**
   * 所需跳转到的小程序appid（该小程序appid必须与发模板消息的公众号是绑定关联关系，暂不支持小游戏）
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 所需跳转到小程序的具体页面路径，支持带参数,（示例index?foo=bar），要求该小程序已发布，暂不支持小游戏
   *
   * @generated from field: string pagepath = 2;
   */
  pagepath: string;
};

/**
 * Describes the message wechat.OfficialAccount.SendTemplateMessage.Request.MiniProgram.
 * Use `create(OfficialAccount_SendTemplateMessage_Request_MiniProgramSchema)` to create a new message.
 */
export const OfficialAccount_SendTemplateMessage_Request_MiniProgramSchema: GenMessage<OfficialAccount_SendTemplateMessage_Request_MiniProgram> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 5, 0, 0);

/**
 * 模板数据
 *
 * @generated from message wechat.OfficialAccount.SendTemplateMessage.Request.Data
 */
export type OfficialAccount_SendTemplateMessage_Request_Data = Message<"wechat.OfficialAccount.SendTemplateMessage.Request.Data"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message wechat.OfficialAccount.SendTemplateMessage.Request.Data.
 * Use `create(OfficialAccount_SendTemplateMessage_Request_DataSchema)` to create a new message.
 */
export const OfficialAccount_SendTemplateMessage_Request_DataSchema: GenMessage<OfficialAccount_SendTemplateMessage_Request_Data> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 5, 0, 1);

/**
 * @generated from message wechat.OfficialAccount.SendTemplateMessage.Response
 */
export type OfficialAccount_SendTemplateMessage_Response = Message<"wechat.OfficialAccount.SendTemplateMessage.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 消息ID
   *
   * @generated from field: int64 msgid = 3;
   */
  msgid: bigint;
};

/**
 * Describes the message wechat.OfficialAccount.SendTemplateMessage.Response.
 * Use `create(OfficialAccount_SendTemplateMessage_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_SendTemplateMessage_ResponseSchema: GenMessage<OfficialAccount_SendTemplateMessage_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 5, 1);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo
 */
export type OfficialAccount_GetCurrentSelfmenuInfo = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo"> & {
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfoSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfoSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Request
 */
export type OfficialAccount_GetCurrentSelfmenuInfo_Request = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Request.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfo_RequestSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfo_RequestSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6, 0);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response
 */
export type OfficialAccount_GetCurrentSelfmenuInfo_Response = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 菜单是否开启，0代表未开启，1代表开启
   *
   * @generated from field: int32 is_menu_open = 3;
   */
  isMenuOpen: number;

  /**
   * @generated from field: wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info selfmen_info = 4;
   */
  selfmenInfo?: OfficialAccount_GetCurrentSelfmenuInfo_Response_Info;
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfo_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfo_ResponseSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6, 1);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info
 */
export type OfficialAccount_GetCurrentSelfmenuInfo_Response_Info = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info"> & {
  /**
   * @generated from field: repeated wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.Button button = 2;
   */
  button: OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_Button[];
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfo_Response_InfoSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfo_Response_InfoSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo_Response_Info> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6, 1, 0);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.Button
 */
export type OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_Button = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.Button"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string type = 2;
   */
  type?: string;

  /**
   * @generated from field: optional string key = 3;
   */
  key?: string;

  /**
   * @generated from field: optional string value = 4;
   */
  value?: string;

  /**
   * @generated from field: optional string url = 5;
   */
  url?: string;

  /**
   * @generated from field: wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo news_info = 6;
   */
  newsInfo?: OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo;

  /**
   * @generated from field: wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.SubButton sub_button = 7;
   */
  subButton?: OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_SubButton;
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.Button.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_ButtonSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_ButtonSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_Button> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6, 1, 0, 0);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.SubButton
 */
export type OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_SubButton = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.SubButton"> & {
  /**
   * @generated from field: repeated wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.Button list = 1;
   */
  list: OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_Button[];
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.SubButton.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_SubButtonSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_SubButtonSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_SubButton> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6, 1, 0, 1);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo
 */
export type OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo"> & {
  /**
   * @generated from field: repeated wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo.Item list = 1;
   */
  list: OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo_Item[];
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfoSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfoSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6, 1, 0, 2);

/**
 * @generated from message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo.Item
 */
export type OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo_Item = Message<"wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo.Item"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string author = 2;
   */
  author: string;

  /**
   * @generated from field: string digest = 3;
   */
  digest: string;

  /**
   * @generated from field: int32 show_cover = 4;
   */
  showCover: number;

  /**
   * @generated from field: string cover_url = 5;
   */
  coverUrl: string;

  /**
   * @generated from field: string content_url = 6;
   */
  contentUrl: string;

  /**
   * @generated from field: string source_url = 7;
   */
  sourceUrl: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetCurrentSelfmenuInfo.Response.Info.NewsInfo.Item.
 * Use `create(OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo_ItemSchema)` to create a new message.
 */
export const OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo_ItemSchema: GenMessage<OfficialAccount_GetCurrentSelfmenuInfo_Response_Info_NewsInfo_Item> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 6, 1, 0, 2, 0);

/**
 * @generated from message wechat.OfficialAccount.CreateMenu
 */
export type OfficialAccount_CreateMenu = Message<"wechat.OfficialAccount.CreateMenu"> & {
};

/**
 * Describes the message wechat.OfficialAccount.CreateMenu.
 * Use `create(OfficialAccount_CreateMenuSchema)` to create a new message.
 */
export const OfficialAccount_CreateMenuSchema: GenMessage<OfficialAccount_CreateMenu> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 7);

/**
 * @generated from message wechat.OfficialAccount.CreateMenu.Request
 */
export type OfficialAccount_CreateMenu_Request = Message<"wechat.OfficialAccount.CreateMenu.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: repeated wechat.OfficialAccount.CreateMenu.Request.Button button = 2;
   */
  button: OfficialAccount_CreateMenu_Request_Button[];
};

/**
 * Describes the message wechat.OfficialAccount.CreateMenu.Request.
 * Use `create(OfficialAccount_CreateMenu_RequestSchema)` to create a new message.
 */
export const OfficialAccount_CreateMenu_RequestSchema: GenMessage<OfficialAccount_CreateMenu_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 7, 0);

/**
 * @generated from message wechat.OfficialAccount.CreateMenu.Request.Button
 */
export type OfficialAccount_CreateMenu_Request_Button = Message<"wechat.OfficialAccount.CreateMenu.Request.Button"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: optional string key = 3;
   */
  key?: string;

  /**
   * @generated from field: optional string value = 4;
   */
  value?: string;

  /**
   * @generated from field: optional string url = 5;
   */
  url?: string;

  /**
   * @generated from field: optional string media_id = 6;
   */
  mediaId?: string;

  /**
   * @generated from field: optional string appid = 7;
   */
  appid?: string;

  /**
   * @generated from field: optional string pagepath = 8;
   */
  pagepath?: string;

  /**
   * @generated from field: optional string article_id = 9;
   */
  articleId?: string;

  /**
   * @generated from field: repeated wechat.OfficialAccount.CreateMenu.Request.Button sub_button = 10;
   */
  subButton: OfficialAccount_CreateMenu_Request_Button[];
};

/**
 * Describes the message wechat.OfficialAccount.CreateMenu.Request.Button.
 * Use `create(OfficialAccount_CreateMenu_Request_ButtonSchema)` to create a new message.
 */
export const OfficialAccount_CreateMenu_Request_ButtonSchema: GenMessage<OfficialAccount_CreateMenu_Request_Button> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 7, 0, 0);

/**
 * @generated from message wechat.OfficialAccount.CreateMenu.Response
 */
export type OfficialAccount_CreateMenu_Response = Message<"wechat.OfficialAccount.CreateMenu.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;
};

/**
 * Describes the message wechat.OfficialAccount.CreateMenu.Response.
 * Use `create(OfficialAccount_CreateMenu_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_CreateMenu_ResponseSchema: GenMessage<OfficialAccount_CreateMenu_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 7, 1);

/**
 * @generated from message wechat.OfficialAccount.DeleteMenu
 */
export type OfficialAccount_DeleteMenu = Message<"wechat.OfficialAccount.DeleteMenu"> & {
};

/**
 * Describes the message wechat.OfficialAccount.DeleteMenu.
 * Use `create(OfficialAccount_DeleteMenuSchema)` to create a new message.
 */
export const OfficialAccount_DeleteMenuSchema: GenMessage<OfficialAccount_DeleteMenu> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 8);

/**
 * @generated from message wechat.OfficialAccount.DeleteMenu.Request
 */
export type OfficialAccount_DeleteMenu_Request = Message<"wechat.OfficialAccount.DeleteMenu.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;
};

/**
 * Describes the message wechat.OfficialAccount.DeleteMenu.Request.
 * Use `create(OfficialAccount_DeleteMenu_RequestSchema)` to create a new message.
 */
export const OfficialAccount_DeleteMenu_RequestSchema: GenMessage<OfficialAccount_DeleteMenu_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 8, 0);

/**
 * @generated from message wechat.OfficialAccount.DeleteMenu.Response
 */
export type OfficialAccount_DeleteMenu_Response = Message<"wechat.OfficialAccount.DeleteMenu.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;
};

/**
 * Describes the message wechat.OfficialAccount.DeleteMenu.Response.
 * Use `create(OfficialAccount_DeleteMenu_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_DeleteMenu_ResponseSchema: GenMessage<OfficialAccount_DeleteMenu_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 8, 1);

/**
 * @generated from message wechat.OfficialAccount.OAuth2
 */
export type OfficialAccount_OAuth2 = Message<"wechat.OfficialAccount.OAuth2"> & {
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.
 * Use `create(OfficialAccount_OAuth2Schema)` to create a new message.
 */
export const OfficialAccount_OAuth2Schema: GenMessage<OfficialAccount_OAuth2> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetAuthorizeURL
 */
export type OfficialAccount_OAuth2_GetAuthorizeURL = Message<"wechat.OfficialAccount.OAuth2.GetAuthorizeURL"> & {
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetAuthorizeURL.
 * Use `create(OfficialAccount_OAuth2_GetAuthorizeURLSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetAuthorizeURLSchema: GenMessage<OfficialAccount_OAuth2_GetAuthorizeURL> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 0);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetAuthorizeURL.Request
 */
export type OfficialAccount_OAuth2_GetAuthorizeURL_Request = Message<"wechat.OfficialAccount.OAuth2.GetAuthorizeURL.Request"> & {
  /**
   * 公众号的唯一标识
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 授权后重定向的回调链接地址，请使用 urlEncode 对链接进行处理
   *
   * @generated from field: string redirect_uri = 2;
   */
  redirectUri: string;

  /**
   * 返回类型，请填写code
   *
   * @generated from field: string response_type = 3;
   */
  responseType: string;

  /**
   * 应用授权作用域，snsapi_base
   * （不弹出授权页面，直接跳转，只能获取用户openid），
   * snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。
   * 并且，即使在未关注的情况下，只要用户授权，也能获取其信息）
   *
   * @generated from field: string scope = 4;
   */
  scope: string;

  /**
   * 用于保持请求和回调的状态，授权请求后原样带回给第三方
   *
   * @generated from field: optional string state = 5;
   */
  state?: string;

  /**
   * @generated from field: optional bool force_popup = 6;
   */
  forcePopup?: boolean;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetAuthorizeURL.Request.
 * Use `create(OfficialAccount_OAuth2_GetAuthorizeURL_RequestSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetAuthorizeURL_RequestSchema: GenMessage<OfficialAccount_OAuth2_GetAuthorizeURL_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 0, 0);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetAuthorizeURL.Response
 */
export type OfficialAccount_OAuth2_GetAuthorizeURL_Response = Message<"wechat.OfficialAccount.OAuth2.GetAuthorizeURL.Response"> & {
  /**
   * 授权链接
   *
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetAuthorizeURL.Response.
 * Use `create(OfficialAccount_OAuth2_GetAuthorizeURL_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetAuthorizeURL_ResponseSchema: GenMessage<OfficialAccount_OAuth2_GetAuthorizeURL_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 0, 1);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetAccessToken
 */
export type OfficialAccount_OAuth2_GetAccessToken = Message<"wechat.OfficialAccount.OAuth2.GetAccessToken"> & {
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetAccessToken.
 * Use `create(OfficialAccount_OAuth2_GetAccessTokenSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetAccessTokenSchema: GenMessage<OfficialAccount_OAuth2_GetAccessToken> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 1);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetAccessToken.Request
 */
export type OfficialAccount_OAuth2_GetAccessToken_Request = Message<"wechat.OfficialAccount.OAuth2.GetAccessToken.Request"> & {
  /**
   * 公众号的唯一标识
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 公众号的appsecret
   *
   * @generated from field: string secret = 2;
   */
  secret: string;

  /**
   * 填写第一步获取的code参数
   *
   * @generated from field: string code = 3;
   */
  code: string;

  /**
   * 填写为authorization_code
   *
   * @generated from field: string grant_type = 4;
   */
  grantType: string;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetAccessToken.Request.
 * Use `create(OfficialAccount_OAuth2_GetAccessToken_RequestSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetAccessToken_RequestSchema: GenMessage<OfficialAccount_OAuth2_GetAccessToken_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 1, 0);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetAccessToken.Response
 */
export type OfficialAccount_OAuth2_GetAccessToken_Response = Message<"wechat.OfficialAccount.OAuth2.GetAccessToken.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 接口调用凭证
   *
   * @generated from field: string access_token = 3;
   */
  accessToken: string;

  /**
   * access_token接口调用凭证超时时间，单位（秒）
   *
   * @generated from field: int32 expires_in = 4;
   */
  expiresIn: number;

  /**
   * 用户刷新access_token
   *
   * @generated from field: string refresh_token = 5;
   */
  refreshToken: string;

  /**
   * 授权用户唯一标识
   *
   * @generated from field: string openid = 6;
   */
  openid: string;

  /**
   * 用户授权的作用域，使用逗号（,）分隔
   *
   * @generated from field: string scope = 7;
   */
  scope: string;

  /**
   * 是否为快照页模式虚拟账号，只有当用户是快照页模式虚拟账号时返回，值为1
   *
   * @generated from field: int32 is_snapshotuser = 8;
   */
  isSnapshotuser: number;

  /**
   * 用户统一标识（针对一个微信开放平台账号下的应用，同一用户的 unionid
   * 是唯一的），只有当scope为"snsapi_userinfo"时返回
   *
   * @generated from field: optional string unionid = 9;
   */
  unionid?: string;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetAccessToken.Response.
 * Use `create(OfficialAccount_OAuth2_GetAccessToken_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetAccessToken_ResponseSchema: GenMessage<OfficialAccount_OAuth2_GetAccessToken_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 1, 1);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.RefreshAccessToken
 */
export type OfficialAccount_OAuth2_RefreshAccessToken = Message<"wechat.OfficialAccount.OAuth2.RefreshAccessToken"> & {
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.RefreshAccessToken.
 * Use `create(OfficialAccount_OAuth2_RefreshAccessTokenSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_RefreshAccessTokenSchema: GenMessage<OfficialAccount_OAuth2_RefreshAccessToken> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 2);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.RefreshAccessToken.Request
 */
export type OfficialAccount_OAuth2_RefreshAccessToken_Request = Message<"wechat.OfficialAccount.OAuth2.RefreshAccessToken.Request"> & {
  /**
   * 公众号的唯一标识
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 填写通过access_token获取到的refresh_token参数
   *
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;

  /**
   * 填写为refresh_token
   *
   * @generated from field: string grant_type = 3;
   */
  grantType: string;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.RefreshAccessToken.Request.
 * Use `create(OfficialAccount_OAuth2_RefreshAccessToken_RequestSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_RefreshAccessToken_RequestSchema: GenMessage<OfficialAccount_OAuth2_RefreshAccessToken_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 2, 0);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.RefreshAccessToken.Response
 */
export type OfficialAccount_OAuth2_RefreshAccessToken_Response = Message<"wechat.OfficialAccount.OAuth2.RefreshAccessToken.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 接口调用凭证
   *
   * @generated from field: string access_token = 3;
   */
  accessToken: string;

  /**
   * access_token接口调用凭证超时时间，单位（秒）
   *
   * @generated from field: int32 expires_in = 4;
   */
  expiresIn: number;

  /**
   * 用户刷新access_token
   *
   * @generated from field: string refresh_token = 5;
   */
  refreshToken: string;

  /**
   * 授权用户唯一标识
   *
   * @generated from field: string openid = 6;
   */
  openid: string;

  /**
   * 用户授权的作用域，使用逗号（,）分隔
   *
   * @generated from field: string scope = 7;
   */
  scope: string;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.RefreshAccessToken.Response.
 * Use `create(OfficialAccount_OAuth2_RefreshAccessToken_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_RefreshAccessToken_ResponseSchema: GenMessage<OfficialAccount_OAuth2_RefreshAccessToken_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 2, 1);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetUserInfo
 */
export type OfficialAccount_OAuth2_GetUserInfo = Message<"wechat.OfficialAccount.OAuth2.GetUserInfo"> & {
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetUserInfo.
 * Use `create(OfficialAccount_OAuth2_GetUserInfoSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetUserInfoSchema: GenMessage<OfficialAccount_OAuth2_GetUserInfo> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 3);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetUserInfo.Request
 */
export type OfficialAccount_OAuth2_GetUserInfo_Request = Message<"wechat.OfficialAccount.OAuth2.GetUserInfo.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * 用户的唯一标识
   *
   * @generated from field: string openid = 2;
   */
  openid: string;

  /**
   * 返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语
   *
   * @generated from field: string lang = 3;
   */
  lang: string;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetUserInfo.Request.
 * Use `create(OfficialAccount_OAuth2_GetUserInfo_RequestSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetUserInfo_RequestSchema: GenMessage<OfficialAccount_OAuth2_GetUserInfo_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 3, 0);

/**
 * @generated from message wechat.OfficialAccount.OAuth2.GetUserInfo.Response
 */
export type OfficialAccount_OAuth2_GetUserInfo_Response = Message<"wechat.OfficialAccount.OAuth2.GetUserInfo.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * 用户的唯一标识
   *
   * @generated from field: string openid = 3;
   */
  openid: string;

  /**
   * 用户昵称
   *
   * @generated from field: string nickname = 4;
   */
  nickname: string;

  /**
   * 用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
   *
   * @generated from field: int32 sex = 5;
   */
  sex: number;

  /**
   * 用户个人资料填写的省份
   *
   * @generated from field: string province = 6;
   */
  province: string;

  /**
   * 普通用户个人资料填写的城市
   *
   * @generated from field: string city = 7;
   */
  city: string;

  /**
   * 国家，如中国为CN
   *
   * @generated from field: string country = 8;
   */
  country: string;

  /**
   * 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
   *
   * @generated from field: string headimgurl = 9;
   */
  headimgurl: string;

  /**
   * 用户特权信息，json 数组，如微信沃卡用户为（chinaunicom）
   *
   * @generated from field: repeated string privilege = 10;
   */
  privilege: string[];

  /**
   * 只有在用户将公众号绑定到微信开放平台账号后，才会出现该字段。
   *
   * @generated from field: optional string unionid = 11;
   */
  unionid?: string;
};

/**
 * Describes the message wechat.OfficialAccount.OAuth2.GetUserInfo.Response.
 * Use `create(OfficialAccount_OAuth2_GetUserInfo_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_OAuth2_GetUserInfo_ResponseSchema: GenMessage<OfficialAccount_OAuth2_GetUserInfo_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 9, 3, 1);

/**
 * @generated from message wechat.OfficialAccount.GetTicket
 */
export type OfficialAccount_GetTicket = Message<"wechat.OfficialAccount.GetTicket"> & {
};

/**
 * Describes the message wechat.OfficialAccount.GetTicket.
 * Use `create(OfficialAccount_GetTicketSchema)` to create a new message.
 */
export const OfficialAccount_GetTicketSchema: GenMessage<OfficialAccount_GetTicket> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 10);

/**
 * @generated from message wechat.OfficialAccount.GetTicket.Request
 */
export type OfficialAccount_GetTicket_Request = Message<"wechat.OfficialAccount.GetTicket.Request"> & {
  /**
   * 调用接口凭证
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetTicket.Request.
 * Use `create(OfficialAccount_GetTicket_RequestSchema)` to create a new message.
 */
export const OfficialAccount_GetTicket_RequestSchema: GenMessage<OfficialAccount_GetTicket_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 10, 0);

/**
 * @generated from message wechat.OfficialAccount.GetTicket.Response
 */
export type OfficialAccount_GetTicket_Response = Message<"wechat.OfficialAccount.GetTicket.Response"> & {
  /**
   * 错误码
   *
   * @generated from field: int32 errcode = 1;
   */
  errcode: number;

  /**
   * 错误信息
   *
   * @generated from field: string errmsg = 2;
   */
  errmsg: string;

  /**
   * ticket
   *
   * @generated from field: string ticket = 3;
   */
  ticket: string;

  /**
   * 凭证有效时间，单位：秒
   *
   * @generated from field: int32 expires_in = 4;
   */
  expiresIn: number;
};

/**
 * Describes the message wechat.OfficialAccount.GetTicket.Response.
 * Use `create(OfficialAccount_GetTicket_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_GetTicket_ResponseSchema: GenMessage<OfficialAccount_GetTicket_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 10, 1);

/**
 * @generated from message wechat.OfficialAccount.GetJSSDKConfig
 */
export type OfficialAccount_GetJSSDKConfig = Message<"wechat.OfficialAccount.GetJSSDKConfig"> & {
};

/**
 * Describes the message wechat.OfficialAccount.GetJSSDKConfig.
 * Use `create(OfficialAccount_GetJSSDKConfigSchema)` to create a new message.
 */
export const OfficialAccount_GetJSSDKConfigSchema: GenMessage<OfficialAccount_GetJSSDKConfig> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 11);

/**
 * @generated from message wechat.OfficialAccount.GetJSSDKConfig.Request
 */
export type OfficialAccount_GetJSSDKConfig_Request = Message<"wechat.OfficialAccount.GetJSSDKConfig.Request"> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: optional int32 timestamp = 2;
   */
  timestamp?: number;

  /**
   * @generated from field: optional string nonce_str = 3;
   */
  nonceStr?: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetJSSDKConfig.Request.
 * Use `create(OfficialAccount_GetJSSDKConfig_RequestSchema)` to create a new message.
 */
export const OfficialAccount_GetJSSDKConfig_RequestSchema: GenMessage<OfficialAccount_GetJSSDKConfig_Request> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 11, 0);

/**
 * @generated from message wechat.OfficialAccount.GetJSSDKConfig.Response
 */
export type OfficialAccount_GetJSSDKConfig_Response = Message<"wechat.OfficialAccount.GetJSSDKConfig.Response"> & {
  /**
   * @generated from field: int32 timestamp = 1;
   */
  timestamp: number;

  /**
   * @generated from field: string nonce_str = 2;
   */
  nonceStr: string;

  /**
   * @generated from field: string signature = 3;
   */
  signature: string;
};

/**
 * Describes the message wechat.OfficialAccount.GetJSSDKConfig.Response.
 * Use `create(OfficialAccount_GetJSSDKConfig_ResponseSchema)` to create a new message.
 */
export const OfficialAccount_GetJSSDKConfig_ResponseSchema: GenMessage<OfficialAccount_GetJSSDKConfig_Response> = /*@__PURE__*/
  messageDesc(file_wechat_official_account, 0, 11, 1);

