// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file wechat/pay.proto (package wechat, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_tagger_tagger } from "../tagger/tagger_pb";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file wechat/pay.proto.
 */
export const file_wechat_pay: GenFile = /*@__PURE__*/
  fileDesc("", [file_tagger_tagger, file_google_protobuf_timestamp]);

/**
 * @generated from message wechat.Pay
 */
export type Pay = Message<"wechat.Pay"> & {
};

/**
 * Describes the message wechat.Pay.
 * Use `create(PaySchema)` to create a new message.
 */
export const PaySchema: GenMessage<Pay> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0);

/**
 * @generated from message wechat.Pay.ListCertificate
 */
export type Pay_ListCertificate = Message<"wechat.Pay.ListCertificate"> & {
};

/**
 * Describes the message wechat.Pay.ListCertificate.
 * Use `create(Pay_ListCertificateSchema)` to create a new message.
 */
export const Pay_ListCertificateSchema: GenMessage<Pay_ListCertificate> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 0);

/**
 * @generated from message wechat.Pay.ListCertificate.Request
 */
export type Pay_ListCertificate_Request = Message<"wechat.Pay.ListCertificate.Request"> & {
};

/**
 * Describes the message wechat.Pay.ListCertificate.Request.
 * Use `create(Pay_ListCertificate_RequestSchema)` to create a new message.
 */
export const Pay_ListCertificate_RequestSchema: GenMessage<Pay_ListCertificate_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 0, 0);

/**
 * @generated from message wechat.Pay.ListCertificate.Response
 */
export type Pay_ListCertificate_Response = Message<"wechat.Pay.ListCertificate.Response"> & {
  /**
   * @generated from field: repeated wechat.Pay.ListCertificate.Response.Certificate data = 1;
   */
  data: Pay_ListCertificate_Response_Certificate[];
};

/**
 * Describes the message wechat.Pay.ListCertificate.Response.
 * Use `create(Pay_ListCertificate_ResponseSchema)` to create a new message.
 */
export const Pay_ListCertificate_ResponseSchema: GenMessage<Pay_ListCertificate_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 0, 1);

/**
 * @generated from message wechat.Pay.ListCertificate.Response.Certificate
 */
export type Pay_ListCertificate_Response_Certificate = Message<"wechat.Pay.ListCertificate.Response.Certificate"> & {
  /**
   * 证书序列号
   *
   * @generated from field: string serial_no = 1;
   */
  serialNo: string;

  /**
   * 证书有效期开始时间
   *
   * @generated from field: string effective_time = 2;
   */
  effectiveTime: string;

  /**
   * 证书过期时间
   *
   * @generated from field: string expire_time = 3;
   */
  expireTime: string;

  /**
   * 为了保证安全性，微信支付在回调通知和平台证书下载接口中，对关键信息进行了AES-256-GCM加密
   *
   * @generated from field: wechat.Pay.ListCertificate.Response.Certificate.EncryptCertificate encrypt_certificate = 4;
   */
  encryptCertificate?: Pay_ListCertificate_Response_Certificate_EncryptCertificate;
};

/**
 * Describes the message wechat.Pay.ListCertificate.Response.Certificate.
 * Use `create(Pay_ListCertificate_Response_CertificateSchema)` to create a new message.
 */
export const Pay_ListCertificate_Response_CertificateSchema: GenMessage<Pay_ListCertificate_Response_Certificate> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 0, 1, 0);

/**
 * @generated from message wechat.Pay.ListCertificate.Response.Certificate.EncryptCertificate
 */
export type Pay_ListCertificate_Response_Certificate_EncryptCertificate = Message<"wechat.Pay.ListCertificate.Response.Certificate.EncryptCertificate"> & {
  /**
   * 加密所使用的算法，目前可能取值仅为 AEAD_AES_256_GCM
   *
   * @generated from field: string algorithm = 1;
   */
  algorithm: string;

  /**
   * 加密所使用的随机字符串
   *
   * @generated from field: string nonce = 2;
   */
  nonce: string;

  /**
   * 附加数据包（可能为空）
   *
   * @generated from field: string associated_data = 3;
   */
  associatedData: string;

  /**
   * 证书内容密文，解密后会获得证书完整内容
   *
   * @generated from field: string ciphertext = 4;
   */
  ciphertext: string;
};

/**
 * Describes the message wechat.Pay.ListCertificate.Response.Certificate.EncryptCertificate.
 * Use `create(Pay_ListCertificate_Response_Certificate_EncryptCertificateSchema)` to create a new message.
 */
export const Pay_ListCertificate_Response_Certificate_EncryptCertificateSchema: GenMessage<Pay_ListCertificate_Response_Certificate_EncryptCertificate> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 0, 1, 0, 0);

/**
 * @generated from message wechat.Pay.QueryTransaction
 */
export type Pay_QueryTransaction = Message<"wechat.Pay.QueryTransaction"> & {
};

/**
 * Describes the message wechat.Pay.QueryTransaction.
 * Use `create(Pay_QueryTransactionSchema)` to create a new message.
 */
export const Pay_QueryTransactionSchema: GenMessage<Pay_QueryTransaction> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1);

/**
 * @generated from message wechat.Pay.QueryTransaction.Request
 */
export type Pay_QueryTransaction_Request = Message<"wechat.Pay.QueryTransaction.Request"> & {
  /**
   * @generated from field: string mchid = 1;
   */
  mchid: string;

  /**
   * @generated from field: optional string out_trade_no = 2;
   */
  outTradeNo?: string;

  /**
   * @generated from field: optional string transaction_id = 3;
   */
  transactionId?: string;
};

/**
 * Describes the message wechat.Pay.QueryTransaction.Request.
 * Use `create(Pay_QueryTransaction_RequestSchema)` to create a new message.
 */
export const Pay_QueryTransaction_RequestSchema: GenMessage<Pay_QueryTransaction_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1, 0);

/**
 * @generated from message wechat.Pay.QueryTransaction.Response
 */
export type Pay_QueryTransaction_Response = Message<"wechat.Pay.QueryTransaction.Response"> & {
  /**
   * 应用 ID
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 直连商户号
   *
   * @generated from field: string mchid = 2;
   */
  mchid: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 3;
   */
  outTradeNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: optional string transaction_id = 4;
   */
  transactionId?: string;

  /**
   * 交易类型
   *
   * @generated from field: optional string trade_type = 5;
   */
  tradeType?: string;

  /**
   * 交易状态
   *
   * @generated from field: string trade_state = 6;
   */
  tradeState: string;

  /**
   * 交易状态描述
   *
   * @generated from field: string trade_state_desc = 7;
   */
  tradeStateDesc: string;

  /**
   * 付款银行
   *
   * @generated from field: optional string bank_type = 8;
   */
  bankType?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 9;
   */
  attach?: string;

  /**
   * 支付完成时间
   *
   * @generated from field: optional string success_time = 10;
   */
  successTime?: string;

  /**
   * @generated from field: wechat.Pay.QueryTransaction.Response.Payer payer = 11;
   */
  payer?: Pay_QueryTransaction_Response_Payer;

  /**
   * @generated from field: optional wechat.Pay.QueryTransaction.Response.Amount amount = 12;
   */
  amount?: Pay_QueryTransaction_Response_Amount;

  /**
   * @generated from field: optional wechat.Pay.QueryTransaction.Response.SceneInfo scene_info = 13;
   */
  sceneInfo?: Pay_QueryTransaction_Response_SceneInfo;

  /**
   * @generated from field: repeated wechat.Pay.QueryTransaction.Response.PromotionDetail promotion_detail = 14;
   */
  promotionDetail: Pay_QueryTransaction_Response_PromotionDetail[];
};

/**
 * Describes the message wechat.Pay.QueryTransaction.Response.
 * Use `create(Pay_QueryTransaction_ResponseSchema)` to create a new message.
 */
export const Pay_QueryTransaction_ResponseSchema: GenMessage<Pay_QueryTransaction_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1, 1);

/**
 * @generated from message wechat.Pay.QueryTransaction.Response.Payer
 */
export type Pay_QueryTransaction_Response_Payer = Message<"wechat.Pay.QueryTransaction.Response.Payer"> & {
  /**
   * 用户标识
   *
   * @generated from field: string openid = 1;
   */
  openid: string;
};

/**
 * Describes the message wechat.Pay.QueryTransaction.Response.Payer.
 * Use `create(Pay_QueryTransaction_Response_PayerSchema)` to create a new message.
 */
export const Pay_QueryTransaction_Response_PayerSchema: GenMessage<Pay_QueryTransaction_Response_Payer> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1, 1, 0);

/**
 * 订单金额
 *
 * @generated from message wechat.Pay.QueryTransaction.Response.Amount
 */
export type Pay_QueryTransaction_Response_Amount = Message<"wechat.Pay.QueryTransaction.Response.Amount"> & {
  /**
   * 总金额
   *
   * @generated from field: optional int32 total = 1;
   */
  total?: number;

  /**
   * 用户支付金额
   *
   * @generated from field: optional int32 payer_total = 2;
   */
  payerTotal?: number;

  /**
   * 货币类型
   *
   * @generated from field: optional string currency = 3;
   */
  currency?: string;

  /**
   * 用户支付币种
   *
   * @generated from field: optional string payer_currency = 4;
   */
  payerCurrency?: string;
};

/**
 * Describes the message wechat.Pay.QueryTransaction.Response.Amount.
 * Use `create(Pay_QueryTransaction_Response_AmountSchema)` to create a new message.
 */
export const Pay_QueryTransaction_Response_AmountSchema: GenMessage<Pay_QueryTransaction_Response_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1, 1, 1);

/**
 * 场景信息
 *
 * @generated from message wechat.Pay.QueryTransaction.Response.SceneInfo
 */
export type Pay_QueryTransaction_Response_SceneInfo = Message<"wechat.Pay.QueryTransaction.Response.SceneInfo"> & {
  /**
   * 商户端设备号
   *
   * @generated from field: optional string device_id = 6;
   */
  deviceId?: string;
};

/**
 * Describes the message wechat.Pay.QueryTransaction.Response.SceneInfo.
 * Use `create(Pay_QueryTransaction_Response_SceneInfoSchema)` to create a new message.
 */
export const Pay_QueryTransaction_Response_SceneInfoSchema: GenMessage<Pay_QueryTransaction_Response_SceneInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1, 1, 2);

/**
 * 优惠功能
 *
 * @generated from message wechat.Pay.QueryTransaction.Response.PromotionDetail
 */
export type Pay_QueryTransaction_Response_PromotionDetail = Message<"wechat.Pay.QueryTransaction.Response.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string coupon_id = 1;
   */
  couponId: string;

  /**
   * 优惠名称
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * 优惠范围
   *
   * @generated from field: optional string scope = 3;
   */
  scope?: string;

  /**
   * 优惠类型
   *
   * @generated from field: optional string type = 4;
   */
  type?: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int32 amount = 5;
   */
  amount: number;

  /**
   * 活动ID
   *
   * @generated from field: optional string stock_id = 6;
   */
  stockId?: string;

  /**
   * 微信出资
   *
   * @generated from field: optional int32 wechatpay_contribute = 7;
   */
  wechatpayContribute?: number;

  /**
   * 商户出资
   *
   * @generated from field: optional int32 merchant_contribute = 8;
   */
  merchantContribute?: number;

  /**
   * 其他出资
   *
   * @generated from field: optional int32 other_contribute = 9;
   */
  otherContribute?: number;

  /**
   * 优惠币种
   *
   * @generated from field: optional string currency = 10;
   */
  currency?: string;

  /**
   * 单品列表
   *
   * @generated from field: repeated wechat.Pay.QueryTransaction.Response.PromotionDetail.GoodsDetail goods_detail = 11;
   */
  goodsDetail: Pay_QueryTransaction_Response_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.Pay.QueryTransaction.Response.PromotionDetail.
 * Use `create(Pay_QueryTransaction_Response_PromotionDetailSchema)` to create a new message.
 */
export const Pay_QueryTransaction_Response_PromotionDetailSchema: GenMessage<Pay_QueryTransaction_Response_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1, 1, 3);

/**
 * @generated from message wechat.Pay.QueryTransaction.Response.PromotionDetail.GoodsDetail
 */
export type Pay_QueryTransaction_Response_PromotionDetail_GoodsDetail = Message<"wechat.Pay.QueryTransaction.Response.PromotionDetail.GoodsDetail"> & {
  /**
   * 商品编码
   *
   * @generated from field: string goods_id = 1;
   */
  goodsId: string;

  /**
   * 商品数量
   *
   * @generated from field: int32 quantity = 2;
   */
  quantity: number;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 3;
   */
  unitPrice: number;

  /**
   * 商品优惠金额
   *
   * @generated from field: int32 discount_amount = 4;
   */
  discountAmount: number;

  /**
   * 商品备注
   *
   * @generated from field: optional string goods_remark = 5;
   */
  goodsRemark?: string;
};

/**
 * Describes the message wechat.Pay.QueryTransaction.Response.PromotionDetail.GoodsDetail.
 * Use `create(Pay_QueryTransaction_Response_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const Pay_QueryTransaction_Response_PromotionDetail_GoodsDetailSchema: GenMessage<Pay_QueryTransaction_Response_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 1, 1, 3, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction
 */
export type Pay_CreateTransaction = Message<"wechat.Pay.CreateTransaction"> & {
};

/**
 * Describes the message wechat.Pay.CreateTransaction.
 * Use `create(Pay_CreateTransactionSchema)` to create a new message.
 */
export const Pay_CreateTransactionSchema: GenMessage<Pay_CreateTransaction> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common
 */
export type Pay_CreateTransaction_Common = Message<"wechat.Pay.CreateTransaction.Common"> & {
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.
 * Use `create(Pay_CreateTransaction_CommonSchema)` to create a new message.
 */
export const Pay_CreateTransaction_CommonSchema: GenMessage<Pay_CreateTransaction_Common> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common.Amount
 */
export type Pay_CreateTransaction_Common_Amount = Message<"wechat.Pay.CreateTransaction.Common.Amount"> & {
  /**
   * 总金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 货币类型
   *
   * @generated from field: optional string currency = 2;
   */
  currency?: string;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.Amount.
 * Use `create(Pay_CreateTransaction_Common_AmountSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Common_AmountSchema: GenMessage<Pay_CreateTransaction_Common_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common.Payer
 */
export type Pay_CreateTransaction_Common_Payer = Message<"wechat.Pay.CreateTransaction.Common.Payer"> & {
  /**
   * 用户标识
   *
   * @generated from field: string openid = 1;
   */
  openid: string;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.Payer.
 * Use `create(Pay_CreateTransaction_Common_PayerSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Common_PayerSchema: GenMessage<Pay_CreateTransaction_Common_Payer> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0, 1);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common.Detail
 */
export type Pay_CreateTransaction_Common_Detail = Message<"wechat.Pay.CreateTransaction.Common.Detail"> & {
  /**
   * 订单原价
   *
   * @generated from field: optional int32 cost_price = 1;
   */
  costPrice?: number;

  /**
   * 商品小票ID
   *
   * @generated from field: optional string invoice_id = 2;
   */
  invoiceId?: string;

  /**
   * @generated from field: repeated wechat.Pay.CreateTransaction.Common.Detail.GoodsDetail goods_detail = 3;
   */
  goodsDetail: Pay_CreateTransaction_Common_Detail_GoodsDetail[];
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.Detail.
 * Use `create(Pay_CreateTransaction_Common_DetailSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Common_DetailSchema: GenMessage<Pay_CreateTransaction_Common_Detail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0, 2);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common.Detail.GoodsDetail
 */
export type Pay_CreateTransaction_Common_Detail_GoodsDetail = Message<"wechat.Pay.CreateTransaction.Common.Detail.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品数量
   *
   * @generated from field: int32 quantity = 4;
   */
  quantity: number;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 5;
   */
  unitPrice: number;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.Detail.GoodsDetail.
 * Use `create(Pay_CreateTransaction_Common_Detail_GoodsDetailSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Common_Detail_GoodsDetailSchema: GenMessage<Pay_CreateTransaction_Common_Detail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0, 2, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common.SceneInfo
 */
export type Pay_CreateTransaction_Common_SceneInfo = Message<"wechat.Pay.CreateTransaction.Common.SceneInfo"> & {
  /**
   * 用户终端 IP
   *
   * @generated from field: string payer_client_ip = 1;
   */
  payerClientIp: string;

  /**
   * 商户端设备号
   *
   * @generated from field: optional string device_id = 2;
   */
  deviceId?: string;

  /**
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.SceneInfo.StoreInfo store_info = 3;
   */
  storeInfo?: Pay_CreateTransaction_Common_SceneInfo_StoreInfo;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.SceneInfo.
 * Use `create(Pay_CreateTransaction_Common_SceneInfoSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Common_SceneInfoSchema: GenMessage<Pay_CreateTransaction_Common_SceneInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0, 3);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common.SceneInfo.StoreInfo
 */
export type Pay_CreateTransaction_Common_SceneInfo_StoreInfo = Message<"wechat.Pay.CreateTransaction.Common.SceneInfo.StoreInfo"> & {
  /**
   * 门店编号
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 门店名称
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * 地区编码
   *
   * @generated from field: optional string area_code = 3;
   */
  areaCode?: string;

  /**
   * 详细地址
   *
   * @generated from field: optional string address = 4;
   */
  address?: string;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.SceneInfo.StoreInfo.
 * Use `create(Pay_CreateTransaction_Common_SceneInfo_StoreInfoSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Common_SceneInfo_StoreInfoSchema: GenMessage<Pay_CreateTransaction_Common_SceneInfo_StoreInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0, 3, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction.Common.SettleInfo
 */
export type Pay_CreateTransaction_Common_SettleInfo = Message<"wechat.Pay.CreateTransaction.Common.SettleInfo"> & {
  /**
   * 是否指定分账
   *
   * @generated from field: optional bool profit_sharing = 1;
   */
  profitSharing?: boolean;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Common.SettleInfo.
 * Use `create(Pay_CreateTransaction_Common_SettleInfoSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Common_SettleInfoSchema: GenMessage<Pay_CreateTransaction_Common_SettleInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 0, 4);

/**
 * @generated from message wechat.Pay.CreateTransaction.Jsapi
 */
export type Pay_CreateTransaction_Jsapi = Message<"wechat.Pay.CreateTransaction.Jsapi"> & {
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Jsapi.
 * Use `create(Pay_CreateTransaction_JsapiSchema)` to create a new message.
 */
export const Pay_CreateTransaction_JsapiSchema: GenMessage<Pay_CreateTransaction_Jsapi> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 1);

/**
 * @generated from message wechat.Pay.CreateTransaction.Jsapi.Request
 */
export type Pay_CreateTransaction_Jsapi_Request = Message<"wechat.Pay.CreateTransaction.Jsapi.Request"> & {
  /**
   * 应用 ID
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 直连商户
   *
   * @generated from field: string mchid = 2;
   */
  mchid: string;

  /**
   * 商品描述
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 4;
   */
  outTradeNo: string;

  /**
   * 交易结束时间
   *
   * @generated from field: optional string time_expire = 5;
   */
  timeExpire?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 6;
   */
  attach?: string;

  /**
   * 通知地址
   *
   * @generated from field: string notify_url = 7;
   */
  notifyUrl: string;

  /**
   * 订单优惠标记
   *
   * @generated from field: optional string goods_tag = 8;
   */
  goodsTag?: string;

  /**
   * 电子发票入口开放标识
   *
   * @generated from field: optional bool support_fapiao = 9;
   */
  supportFapiao?: boolean;

  /**
   * 订单金额
   *
   * @generated from field: wechat.Pay.CreateTransaction.Common.Amount amount = 10;
   */
  amount?: Pay_CreateTransaction_Common_Amount;

  /**
   * 支付者
   *
   * @generated from field: wechat.Pay.CreateTransaction.Common.Payer payer = 11;
   */
  payer?: Pay_CreateTransaction_Common_Payer;

  /**
   * 优惠功能
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.Detail detail = 12;
   */
  detail?: Pay_CreateTransaction_Common_Detail;

  /**
   * 场景信息
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.SceneInfo scene_info = 13;
   */
  sceneInfo?: Pay_CreateTransaction_Common_SceneInfo;

  /**
   * 结算信息
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.SettleInfo settle_info = 14;
   */
  settleInfo?: Pay_CreateTransaction_Common_SettleInfo;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Jsapi.Request.
 * Use `create(Pay_CreateTransaction_Jsapi_RequestSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Jsapi_RequestSchema: GenMessage<Pay_CreateTransaction_Jsapi_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 1, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction.Jsapi.Response
 */
export type Pay_CreateTransaction_Jsapi_Response = Message<"wechat.Pay.CreateTransaction.Jsapi.Response"> & {
  /**
   * 预支付交易会话标识
   *
   * @generated from field: string prepay_id = 1;
   */
  prepayId: string;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Jsapi.Response.
 * Use `create(Pay_CreateTransaction_Jsapi_ResponseSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Jsapi_ResponseSchema: GenMessage<Pay_CreateTransaction_Jsapi_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 1, 1);

/**
 * @generated from message wechat.Pay.CreateTransaction.Jsapi.SignedResponse
 */
export type Pay_CreateTransaction_Jsapi_SignedResponse = Message<"wechat.Pay.CreateTransaction.Jsapi.SignedResponse"> & {
  /**
   * 应用ID
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 时间戳
   *
   * @generated from field: string time_stamp = 2;
   */
  timeStamp: string;

  /**
   * 随机字符串
   *
   * @generated from field: string nonce_str = 3;
   */
  nonceStr: string;

  /**
   * 订单详情扩展字符串
   *
   * @generated from field: string package = 4;
   */
  package: string;

  /**
   * 签名方式
   *
   * @generated from field: string sign_type = 5;
   */
  signType: string;

  /**
   * 签名
   *
   * @generated from field: string pay_sign = 6;
   */
  paySign: string;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Jsapi.SignedResponse.
 * Use `create(Pay_CreateTransaction_Jsapi_SignedResponseSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Jsapi_SignedResponseSchema: GenMessage<Pay_CreateTransaction_Jsapi_SignedResponse> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 1, 2);

/**
 * @generated from message wechat.Pay.CreateTransaction.Native
 */
export type Pay_CreateTransaction_Native = Message<"wechat.Pay.CreateTransaction.Native"> & {
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Native.
 * Use `create(Pay_CreateTransaction_NativeSchema)` to create a new message.
 */
export const Pay_CreateTransaction_NativeSchema: GenMessage<Pay_CreateTransaction_Native> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 2);

/**
 * @generated from message wechat.Pay.CreateTransaction.Native.Request
 */
export type Pay_CreateTransaction_Native_Request = Message<"wechat.Pay.CreateTransaction.Native.Request"> & {
  /**
   * 应用 ID
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 直连商户
   *
   * @generated from field: string mchid = 2;
   */
  mchid: string;

  /**
   * 商品描述
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 4;
   */
  outTradeNo: string;

  /**
   * 交易结束时间
   *
   * @generated from field: optional string time_expire = 5;
   */
  timeExpire?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 6;
   */
  attach?: string;

  /**
   * 通知地址
   *
   * @generated from field: string notify_url = 7;
   */
  notifyUrl: string;

  /**
   * 订单优惠标记
   *
   * @generated from field: optional string goods_tag = 8;
   */
  goodsTag?: string;

  /**
   * 电子发票入口开放标识
   *
   * @generated from field: optional bool support_fapiao = 9;
   */
  supportFapiao?: boolean;

  /**
   * 订单金额
   *
   * @generated from field: wechat.Pay.CreateTransaction.Common.Amount amount = 10;
   */
  amount?: Pay_CreateTransaction_Common_Amount;

  /**
   * 优惠功能
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.Detail detail = 11;
   */
  detail?: Pay_CreateTransaction_Common_Detail;

  /**
   * 场景信息
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.SceneInfo scene_info = 12;
   */
  sceneInfo?: Pay_CreateTransaction_Common_SceneInfo;

  /**
   * 结算信息
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.SettleInfo settle_info = 13;
   */
  settleInfo?: Pay_CreateTransaction_Common_SettleInfo;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Native.Request.
 * Use `create(Pay_CreateTransaction_Native_RequestSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Native_RequestSchema: GenMessage<Pay_CreateTransaction_Native_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 2, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction.Native.Response
 */
export type Pay_CreateTransaction_Native_Response = Message<"wechat.Pay.CreateTransaction.Native.Response"> & {
  /**
   * 此URL用于生成支付二维码，然后提供给用户扫码支付。
   * 注意：code_url并非固定值，使用时按照URL格式转成二维码即可。
   *
   * @generated from field: string code_url = 1;
   */
  codeUrl: string;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.Native.Response.
 * Use `create(Pay_CreateTransaction_Native_ResponseSchema)` to create a new message.
 */
export const Pay_CreateTransaction_Native_ResponseSchema: GenMessage<Pay_CreateTransaction_Native_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 2, 1);

/**
 * @generated from message wechat.Pay.CreateTransaction.H5
 */
export type Pay_CreateTransaction_H5 = Message<"wechat.Pay.CreateTransaction.H5"> & {
};

/**
 * Describes the message wechat.Pay.CreateTransaction.H5.
 * Use `create(Pay_CreateTransaction_H5Schema)` to create a new message.
 */
export const Pay_CreateTransaction_H5Schema: GenMessage<Pay_CreateTransaction_H5> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 3);

/**
 * @generated from message wechat.Pay.CreateTransaction.H5.Request
 */
export type Pay_CreateTransaction_H5_Request = Message<"wechat.Pay.CreateTransaction.H5.Request"> & {
  /**
   * 应用 ID
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 直连商户
   *
   * @generated from field: string mchid = 2;
   */
  mchid: string;

  /**
   * 商品描述
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 4;
   */
  outTradeNo: string;

  /**
   * 交易结束时间
   *
   * @generated from field: optional string time_expire = 5;
   */
  timeExpire?: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 6;
   */
  attach?: string;

  /**
   * 通知地址
   *
   * @generated from field: string notify_url = 7;
   */
  notifyUrl: string;

  /**
   * 订单优惠标记
   *
   * @generated from field: optional string goods_tag = 8;
   */
  goodsTag?: string;

  /**
   * 电子发票入口开放标识
   *
   * @generated from field: optional bool support_fapiao = 9;
   */
  supportFapiao?: boolean;

  /**
   * 订单金额
   *
   * @generated from field: wechat.Pay.CreateTransaction.Common.Amount amount = 10;
   */
  amount?: Pay_CreateTransaction_Common_Amount;

  /**
   * 优惠功能
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.Detail detail = 11;
   */
  detail?: Pay_CreateTransaction_Common_Detail;

  /**
   * 场景信息
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.SceneInfo scene_info = 12;
   */
  sceneInfo?: Pay_CreateTransaction_Common_SceneInfo;

  /**
   * 结算信息
   *
   * @generated from field: optional wechat.Pay.CreateTransaction.Common.SettleInfo settle_info = 13;
   */
  settleInfo?: Pay_CreateTransaction_Common_SettleInfo;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.H5.Request.
 * Use `create(Pay_CreateTransaction_H5_RequestSchema)` to create a new message.
 */
export const Pay_CreateTransaction_H5_RequestSchema: GenMessage<Pay_CreateTransaction_H5_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 3, 0);

/**
 * @generated from message wechat.Pay.CreateTransaction.H5.Response
 */
export type Pay_CreateTransaction_H5_Response = Message<"wechat.Pay.CreateTransaction.H5.Response"> & {
  /**
   * 支付跳转链接
   *
   * @generated from field: string h5_url = 1;
   */
  h5Url: string;
};

/**
 * Describes the message wechat.Pay.CreateTransaction.H5.Response.
 * Use `create(Pay_CreateTransaction_H5_ResponseSchema)` to create a new message.
 */
export const Pay_CreateTransaction_H5_ResponseSchema: GenMessage<Pay_CreateTransaction_H5_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 2, 3, 1);

/**
 * @generated from message wechat.Pay.CloseTransaction
 */
export type Pay_CloseTransaction = Message<"wechat.Pay.CloseTransaction"> & {
};

/**
 * Describes the message wechat.Pay.CloseTransaction.
 * Use `create(Pay_CloseTransactionSchema)` to create a new message.
 */
export const Pay_CloseTransactionSchema: GenMessage<Pay_CloseTransaction> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 3);

/**
 * @generated from message wechat.Pay.CloseTransaction.Request
 */
export type Pay_CloseTransaction_Request = Message<"wechat.Pay.CloseTransaction.Request"> & {
  /**
   * @generated from field: string out_trade_no = 1;
   */
  outTradeNo: string;

  /**
   * @generated from field: string mchid = 2;
   */
  mchid: string;
};

/**
 * Describes the message wechat.Pay.CloseTransaction.Request.
 * Use `create(Pay_CloseTransaction_RequestSchema)` to create a new message.
 */
export const Pay_CloseTransaction_RequestSchema: GenMessage<Pay_CloseTransaction_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 3, 0);

/**
 * @generated from message wechat.Pay.CloseTransaction.Response
 */
export type Pay_CloseTransaction_Response = Message<"wechat.Pay.CloseTransaction.Response"> & {
};

/**
 * Describes the message wechat.Pay.CloseTransaction.Response.
 * Use `create(Pay_CloseTransaction_ResponseSchema)` to create a new message.
 */
export const Pay_CloseTransaction_ResponseSchema: GenMessage<Pay_CloseTransaction_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 3, 1);

/**
 * @generated from message wechat.Pay.CreateRefund
 */
export type Pay_CreateRefund = Message<"wechat.Pay.CreateRefund"> & {
};

/**
 * Describes the message wechat.Pay.CreateRefund.
 * Use `create(Pay_CreateRefundSchema)` to create a new message.
 */
export const Pay_CreateRefundSchema: GenMessage<Pay_CreateRefund> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4);

/**
 * @generated from message wechat.Pay.CreateRefund.Request
 */
export type Pay_CreateRefund_Request = Message<"wechat.Pay.CreateRefund.Request"> & {
  /**
   * 微信支付订单号
   *
   * @generated from field: optional string transaction_id = 1;
   */
  transactionId?: string;

  /**
   * 商户订单号
   *
   * @generated from field: optional string out_trade_no = 2;
   */
  outTradeNo?: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 3;
   */
  outRefundNo: string;

  /**
   * 退款原因
   *
   * @generated from field: optional string reason = 4;
   */
  reason?: string;

  /**
   * 退款结果回调url
   *
   * @generated from field: optional string notify_url = 5;
   */
  notifyUrl?: string;

  /**
   * 退款资金来源
   *
   * @generated from field: optional string funds_account = 6;
   */
  fundsAccount?: string;

  /**
   * @generated from field: wechat.Pay.CreateRefund.Request.Amount amount = 7;
   */
  amount?: Pay_CreateRefund_Request_Amount;

  /**
   * 退款商品
   *
   * @generated from field: repeated wechat.Pay.CreateRefund.Request.GoodsDetail goods_detail = 8;
   */
  goodsDetail: Pay_CreateRefund_Request_GoodsDetail[];
};

/**
 * Describes the message wechat.Pay.CreateRefund.Request.
 * Use `create(Pay_CreateRefund_RequestSchema)` to create a new message.
 */
export const Pay_CreateRefund_RequestSchema: GenMessage<Pay_CreateRefund_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 0);

/**
 * 金额信息
 *
 * @generated from message wechat.Pay.CreateRefund.Request.Amount
 */
export type Pay_CreateRefund_Request_Amount = Message<"wechat.Pay.CreateRefund.Request.Amount"> & {
  /**
   * 退款金额
   *
   * @generated from field: int32 refund = 1;
   */
  refund: number;

  /**
   * 退款出资账户及金额
   *
   * @generated from field: repeated wechat.Pay.CreateRefund.Request.Amount.From from = 2;
   */
  from: Pay_CreateRefund_Request_Amount_From[];

  /**
   * 原订单金额
   *
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * 退款币种
   *
   * @generated from field: string currency = 4;
   */
  currency: string;
};

/**
 * Describes the message wechat.Pay.CreateRefund.Request.Amount.
 * Use `create(Pay_CreateRefund_Request_AmountSchema)` to create a new message.
 */
export const Pay_CreateRefund_Request_AmountSchema: GenMessage<Pay_CreateRefund_Request_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 0, 0);

/**
 * @generated from message wechat.Pay.CreateRefund.Request.Amount.From
 */
export type Pay_CreateRefund_Request_Amount_From = Message<"wechat.Pay.CreateRefund.Request.Amount.From"> & {
  /**
   * 出资账户类型
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * 出资金额
   *
   * @generated from field: int32 amount = 2;
   */
  amount: number;
};

/**
 * Describes the message wechat.Pay.CreateRefund.Request.Amount.From.
 * Use `create(Pay_CreateRefund_Request_Amount_FromSchema)` to create a new message.
 */
export const Pay_CreateRefund_Request_Amount_FromSchema: GenMessage<Pay_CreateRefund_Request_Amount_From> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 0, 0, 0);

/**
 * @generated from message wechat.Pay.CreateRefund.Request.GoodsDetail
 */
export type Pay_CreateRefund_Request_GoodsDetail = Message<"wechat.Pay.CreateRefund.Request.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 4;
   */
  unitPrice: number;

  /**
   * 商品退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品退货数量
   *
   * @generated from field: int32 refund_quantity = 6;
   */
  refundQuantity: number;
};

/**
 * Describes the message wechat.Pay.CreateRefund.Request.GoodsDetail.
 * Use `create(Pay_CreateRefund_Request_GoodsDetailSchema)` to create a new message.
 */
export const Pay_CreateRefund_Request_GoodsDetailSchema: GenMessage<Pay_CreateRefund_Request_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 0, 1);

/**
 * @generated from message wechat.Pay.CreateRefund.Response
 */
export type Pay_CreateRefund_Response = Message<"wechat.Pay.CreateRefund.Response"> & {
  /**
   * 微信支付退款单号
   *
   * @generated from field: string refund_id = 1;
   */
  refundId: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 2;
   */
  outRefundNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 3;
   */
  transactionId: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 4;
   */
  outTradeNo: string;

  /**
   * 退款渠道
   *
   * @generated from field: string channel = 5;
   */
  channel: string;

  /**
   * 退款入账账户
   *
   * @generated from field: string user_received_account = 6;
   */
  userReceivedAccount: string;

  /**
   * 退款成功时间
   *
   * @generated from field: optional string success_time = 7;
   */
  successTime?: string;

  /**
   * 退款创建时间
   *
   * @generated from field: string create_time = 8;
   */
  createTime: string;

  /**
   * 退款状态
   *
   * @generated from field: string status = 9;
   */
  status: string;

  /**
   * 资金账户
   *
   * @generated from field: optional string funds_account = 10;
   */
  fundsAccount?: string;

  /**
   * @generated from field: wechat.Pay.CreateRefund.Response.Amount amount = 11;
   */
  amount?: Pay_CreateRefund_Response_Amount;

  /**
   * @generated from field: repeated wechat.Pay.CreateRefund.Response.PromotionDetail promotion_detail = 12;
   */
  promotionDetail: Pay_CreateRefund_Response_PromotionDetail[];
};

/**
 * Describes the message wechat.Pay.CreateRefund.Response.
 * Use `create(Pay_CreateRefund_ResponseSchema)` to create a new message.
 */
export const Pay_CreateRefund_ResponseSchema: GenMessage<Pay_CreateRefund_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 1);

/**
 * 金额信息
 *
 * @generated from message wechat.Pay.CreateRefund.Response.Amount
 */
export type Pay_CreateRefund_Response_Amount = Message<"wechat.Pay.CreateRefund.Response.Amount"> & {
  /**
   * 订单金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 退款金额
   *
   * @generated from field: int32 refund = 2;
   */
  refund: number;

  /**
   * @generated from field: repeated wechat.Pay.CreateRefund.Response.Amount.From from = 3;
   */
  from: Pay_CreateRefund_Response_Amount_From[];

  /**
   * 用户支付金额
   *
   * @generated from field: int32 payer_total = 4;
   */
  payerTotal: number;

  /**
   * 用户退款金额
   *
   * @generated from field: int32 payer_refund = 5;
   */
  payerRefund: number;

  /**
   * 应结退款金额
   *
   * @generated from field: int32 settlement_refund = 6;
   */
  settlementRefund: number;

  /**
   * 应结订单金额
   *
   * @generated from field: int32 settlement_total = 7;
   */
  settlementTotal: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 discount_refund = 8;
   */
  discountRefund: number;

  /**
   * 退款币种
   *
   * @generated from field: string currency = 9;
   */
  currency: string;

  /**
   * 手续费退款金额
   *
   * @generated from field: optional int32 refund_fee = 10;
   */
  refundFee?: number;
};

/**
 * Describes the message wechat.Pay.CreateRefund.Response.Amount.
 * Use `create(Pay_CreateRefund_Response_AmountSchema)` to create a new message.
 */
export const Pay_CreateRefund_Response_AmountSchema: GenMessage<Pay_CreateRefund_Response_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 1, 0);

/**
 * 退款出资账户及金额
 *
 * @generated from message wechat.Pay.CreateRefund.Response.Amount.From
 */
export type Pay_CreateRefund_Response_Amount_From = Message<"wechat.Pay.CreateRefund.Response.Amount.From"> & {
  /**
   * 出资账户类型
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * 出资金额
   *
   * @generated from field: int32 amount = 2;
   */
  amount: number;
};

/**
 * Describes the message wechat.Pay.CreateRefund.Response.Amount.From.
 * Use `create(Pay_CreateRefund_Response_Amount_FromSchema)` to create a new message.
 */
export const Pay_CreateRefund_Response_Amount_FromSchema: GenMessage<Pay_CreateRefund_Response_Amount_From> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 1, 0, 0);

/**
 * 优惠退款信息
 *
 * @generated from message wechat.Pay.CreateRefund.Response.PromotionDetail
 */
export type Pay_CreateRefund_Response_PromotionDetail = Message<"wechat.Pay.CreateRefund.Response.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string promotion_id = 1;
   */
  promotionId: string;

  /**
   * 优惠范围
   *
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * 优惠类型
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int32 amount = 4;
   */
  amount: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品列表
   *
   * @generated from field: repeated wechat.Pay.CreateRefund.Response.PromotionDetail.GoodsDetail goods_detail = 6;
   */
  goodsDetail: Pay_CreateRefund_Response_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.Pay.CreateRefund.Response.PromotionDetail.
 * Use `create(Pay_CreateRefund_Response_PromotionDetailSchema)` to create a new message.
 */
export const Pay_CreateRefund_Response_PromotionDetailSchema: GenMessage<Pay_CreateRefund_Response_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 1, 1);

/**
 * @generated from message wechat.Pay.CreateRefund.Response.PromotionDetail.GoodsDetail
 */
export type Pay_CreateRefund_Response_PromotionDetail_GoodsDetail = Message<"wechat.Pay.CreateRefund.Response.PromotionDetail.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 4;
   */
  unitPrice: number;

  /**
   * 商品退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品退货数量
   *
   * @generated from field: int32 refund_quantity = 6;
   */
  refundQuantity: number;
};

/**
 * Describes the message wechat.Pay.CreateRefund.Response.PromotionDetail.GoodsDetail.
 * Use `create(Pay_CreateRefund_Response_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const Pay_CreateRefund_Response_PromotionDetail_GoodsDetailSchema: GenMessage<Pay_CreateRefund_Response_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 4, 1, 1, 0);

/**
 * @generated from message wechat.Pay.QueryRefund
 */
export type Pay_QueryRefund = Message<"wechat.Pay.QueryRefund"> & {
};

/**
 * Describes the message wechat.Pay.QueryRefund.
 * Use `create(Pay_QueryRefundSchema)` to create a new message.
 */
export const Pay_QueryRefundSchema: GenMessage<Pay_QueryRefund> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 5);

/**
 * @generated from message wechat.Pay.QueryRefund.Request
 */
export type Pay_QueryRefund_Request = Message<"wechat.Pay.QueryRefund.Request"> & {
  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 1;
   */
  outRefundNo: string;
};

/**
 * Describes the message wechat.Pay.QueryRefund.Request.
 * Use `create(Pay_QueryRefund_RequestSchema)` to create a new message.
 */
export const Pay_QueryRefund_RequestSchema: GenMessage<Pay_QueryRefund_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 5, 0);

/**
 * @generated from message wechat.Pay.QueryRefund.Response
 */
export type Pay_QueryRefund_Response = Message<"wechat.Pay.QueryRefund.Response"> & {
  /**
   * 微信支付退款单号
   *
   * @generated from field: string refund_id = 1;
   */
  refundId: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 2;
   */
  outRefundNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 3;
   */
  transactionId: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 4;
   */
  outTradeNo: string;

  /**
   * 退款渠道
   *
   * @generated from field: string channel = 5;
   */
  channel: string;

  /**
   * 退款入账账户
   *
   * @generated from field: string user_received_account = 6;
   */
  userReceivedAccount: string;

  /**
   * 退款成功时间
   *
   * @generated from field: optional string success_time = 7;
   */
  successTime?: string;

  /**
   * 退款创建时间
   *
   * @generated from field: string create_time = 8;
   */
  createTime: string;

  /**
   * 退款状态
   *
   * @generated from field: string status = 9;
   */
  status: string;

  /**
   * 资金账户
   *
   * @generated from field: optional string funds_account = 10;
   */
  fundsAccount?: string;

  /**
   * 金额信息
   *
   * @generated from field: wechat.Pay.QueryRefund.Response.Amount amount = 11;
   */
  amount?: Pay_QueryRefund_Response_Amount;

  /**
   * 优惠退款信息
   *
   * @generated from field: repeated wechat.Pay.QueryRefund.Response.PromotionDetail promotion_detail = 12;
   */
  promotionDetail: Pay_QueryRefund_Response_PromotionDetail[];
};

/**
 * Describes the message wechat.Pay.QueryRefund.Response.
 * Use `create(Pay_QueryRefund_ResponseSchema)` to create a new message.
 */
export const Pay_QueryRefund_ResponseSchema: GenMessage<Pay_QueryRefund_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 5, 1);

/**
 * @generated from message wechat.Pay.QueryRefund.Response.Amount
 */
export type Pay_QueryRefund_Response_Amount = Message<"wechat.Pay.QueryRefund.Response.Amount"> & {
  /**
   * 订单金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 退款金额
   *
   * @generated from field: int32 refund = 2;
   */
  refund: number;

  /**
   * @generated from field: repeated wechat.Pay.QueryRefund.Response.Amount.From from = 3;
   */
  from: Pay_QueryRefund_Response_Amount_From[];

  /**
   * 用户支付金额
   *
   * @generated from field: int32 payer_total = 4;
   */
  payerTotal: number;

  /**
   * 用户退款金额
   *
   * @generated from field: int32 payer_refund = 5;
   */
  payerRefund: number;

  /**
   * 应结退款金额
   *
   * @generated from field: int32 settlement_refund = 6;
   */
  settlementRefund: number;

  /**
   * 应结订单金额
   *
   * @generated from field: int32 settlement_total = 7;
   */
  settlementTotal: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 discount_refund = 8;
   */
  discountRefund: number;

  /**
   * 退款币种
   *
   * @generated from field: string currency = 9;
   */
  currency: string;

  /**
   * 手续费退款金额
   *
   * @generated from field: optional int32 refund_fee = 10;
   */
  refundFee?: number;
};

/**
 * Describes the message wechat.Pay.QueryRefund.Response.Amount.
 * Use `create(Pay_QueryRefund_Response_AmountSchema)` to create a new message.
 */
export const Pay_QueryRefund_Response_AmountSchema: GenMessage<Pay_QueryRefund_Response_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 5, 1, 0);

/**
 * 退款出资账户及金额
 *
 * @generated from message wechat.Pay.QueryRefund.Response.Amount.From
 */
export type Pay_QueryRefund_Response_Amount_From = Message<"wechat.Pay.QueryRefund.Response.Amount.From"> & {
  /**
   * 出资账户类型
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * 出资金额
   *
   * @generated from field: int32 amount = 2;
   */
  amount: number;
};

/**
 * Describes the message wechat.Pay.QueryRefund.Response.Amount.From.
 * Use `create(Pay_QueryRefund_Response_Amount_FromSchema)` to create a new message.
 */
export const Pay_QueryRefund_Response_Amount_FromSchema: GenMessage<Pay_QueryRefund_Response_Amount_From> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 5, 1, 0, 0);

/**
 * @generated from message wechat.Pay.QueryRefund.Response.PromotionDetail
 */
export type Pay_QueryRefund_Response_PromotionDetail = Message<"wechat.Pay.QueryRefund.Response.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string promotion_id = 1;
   */
  promotionId: string;

  /**
   * 优惠范围
   *
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * 优惠类型
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int32 amount = 4;
   */
  amount: number;

  /**
   * 优惠退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * @generated from field: repeated wechat.Pay.QueryRefund.Response.PromotionDetail.GoodsDetail goods_detail = 6;
   */
  goodsDetail: Pay_QueryRefund_Response_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.Pay.QueryRefund.Response.PromotionDetail.
 * Use `create(Pay_QueryRefund_Response_PromotionDetailSchema)` to create a new message.
 */
export const Pay_QueryRefund_Response_PromotionDetailSchema: GenMessage<Pay_QueryRefund_Response_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 5, 1, 1);

/**
 * 商品列表
 *
 * @generated from message wechat.Pay.QueryRefund.Response.PromotionDetail.GoodsDetail
 */
export type Pay_QueryRefund_Response_PromotionDetail_GoodsDetail = Message<"wechat.Pay.QueryRefund.Response.PromotionDetail.GoodsDetail"> & {
  /**
   * 商户侧商品编码
   *
   * @generated from field: string merchant_goods_id = 1;
   */
  merchantGoodsId: string;

  /**
   * 微信支付商品编码
   *
   * @generated from field: optional string wechatpay_goods_id = 2;
   */
  wechatpayGoodsId?: string;

  /**
   * 商品名称
   *
   * @generated from field: optional string goods_name = 3;
   */
  goodsName?: string;

  /**
   * 商品单价
   *
   * @generated from field: int32 unit_price = 4;
   */
  unitPrice: number;

  /**
   * 商品退款金额
   *
   * @generated from field: int32 refund_amount = 5;
   */
  refundAmount: number;

  /**
   * 商品退货数量
   *
   * @generated from field: int32 refund_quantity = 6;
   */
  refundQuantity: number;
};

/**
 * Describes the message wechat.Pay.QueryRefund.Response.PromotionDetail.GoodsDetail.
 * Use `create(Pay_QueryRefund_Response_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const Pay_QueryRefund_Response_PromotionDetail_GoodsDetailSchema: GenMessage<Pay_QueryRefund_Response_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 5, 1, 1, 0);

/**
 * @generated from message wechat.Pay.Notify
 */
export type Pay_Notify = Message<"wechat.Pay.Notify"> & {
  /**
   * @generated from field: string signature = 1;
   */
  signature: string;

  /**
   * @generated from field: string serial = 2;
   */
  serial: string;

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp: string;

  /**
   * @generated from field: string nonce = 4;
   */
  nonce: string;

  /**
   * @generated from field: string body = 5;
   */
  body: string;
};

/**
 * Describes the message wechat.Pay.Notify.
 * Use `create(Pay_NotifySchema)` to create a new message.
 */
export const Pay_NotifySchema: GenMessage<Pay_Notify> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6);

/**
 * @generated from message wechat.Pay.Notify.Body
 */
export type Pay_Notify_Body = Message<"wechat.Pay.Notify.Body"> & {
  /**
   * 通知ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 通知创建时间
   *
   * @generated from field: string create_time = 2;
   */
  createTime: string;

  /**
   * 通知类型
   *
   * @generated from field: string event_type = 3;
   */
  eventType: string;

  /**
   * 通知数据类型
   *
   * @generated from field: string resource_type = 4;
   */
  resourceType: string;

  /**
   * 通知数据
   *
   * @generated from field: wechat.Pay.Notify.Body.Resource resource = 5;
   */
  resource?: Pay_Notify_Body_Resource;

  /**
   * 回调摘要
   *
   * @generated from field: string summary = 6;
   */
  summary: string;
};

/**
 * Describes the message wechat.Pay.Notify.Body.
 * Use `create(Pay_Notify_BodySchema)` to create a new message.
 */
export const Pay_Notify_BodySchema: GenMessage<Pay_Notify_Body> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 0);

/**
 * @generated from message wechat.Pay.Notify.Body.Resource
 */
export type Pay_Notify_Body_Resource = Message<"wechat.Pay.Notify.Body.Resource"> & {
  /**
   * 加密算法类型
   *
   * @generated from field: string algorithm = 1;
   */
  algorithm: string;

  /**
   * 加密前的对象类型
   *
   * @generated from field: string original_type = 2;
   */
  originalType: string;

  /**
   * 数据密文
   *
   * @generated from field: string ciphertext = 3;
   */
  ciphertext: string;

  /**
   * 附加数据
   *
   * @generated from field: string associated_data = 4;
   */
  associatedData: string;

  /**
   * 随机串
   *
   * @generated from field: string nonce = 5;
   */
  nonce: string;
};

/**
 * Describes the message wechat.Pay.Notify.Body.Resource.
 * Use `create(Pay_Notify_Body_ResourceSchema)` to create a new message.
 */
export const Pay_Notify_Body_ResourceSchema: GenMessage<Pay_Notify_Body_Resource> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 0, 0);

/**
 * @generated from message wechat.Pay.Notify.Transaction
 */
export type Pay_Notify_Transaction = Message<"wechat.Pay.Notify.Transaction"> & {
  /**
   * 应用 ID
   *
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * 商户号
   *
   * @generated from field: string mchid = 2;
   */
  mchid: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 3;
   */
  outTradeNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 4;
   */
  transactionId: string;

  /**
   * 交易类型
   *
   * @generated from field: string trade_type = 5;
   */
  tradeType: string;

  /**
   * 交易状态
   *
   * @generated from field: string trade_state = 6;
   */
  tradeState: string;

  /**
   * 交易状态描述
   *
   * @generated from field: string trade_state_desc = 7;
   */
  tradeStateDesc: string;

  /**
   * 付款银行
   *
   * @generated from field: string bank_type = 8;
   */
  bankType: string;

  /**
   * 附加数据
   *
   * @generated from field: optional string attach = 9;
   */
  attach?: string;

  /**
   * 支付完成时间
   *
   * @generated from field: string success_time = 10;
   */
  successTime: string;

  /**
   * 支付者信息
   *
   * @generated from field: wechat.Pay.Notify.Transaction.Payer payer = 11;
   */
  payer?: Pay_Notify_Transaction_Payer;

  /**
   * 订单金额信息
   *
   * @generated from field: wechat.Pay.Notify.Transaction.Amount amount = 12;
   */
  amount?: Pay_Notify_Transaction_Amount;

  /**
   * 支付场景信息描述
   *
   * @generated from field: optional wechat.Pay.Notify.Transaction.SceneInfo scene_info = 13;
   */
  sceneInfo?: Pay_Notify_Transaction_SceneInfo;

  /**
   * 优惠功能
   *
   * @generated from field: repeated wechat.Pay.Notify.Transaction.PromotionDetail promotion_detail = 14;
   */
  promotionDetail: Pay_Notify_Transaction_PromotionDetail[];
};

/**
 * Describes the message wechat.Pay.Notify.Transaction.
 * Use `create(Pay_Notify_TransactionSchema)` to create a new message.
 */
export const Pay_Notify_TransactionSchema: GenMessage<Pay_Notify_Transaction> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 1);

/**
 * @generated from message wechat.Pay.Notify.Transaction.Payer
 */
export type Pay_Notify_Transaction_Payer = Message<"wechat.Pay.Notify.Transaction.Payer"> & {
  /**
   * 用户标识
   *
   * @generated from field: string openid = 1;
   */
  openid: string;
};

/**
 * Describes the message wechat.Pay.Notify.Transaction.Payer.
 * Use `create(Pay_Notify_Transaction_PayerSchema)` to create a new message.
 */
export const Pay_Notify_Transaction_PayerSchema: GenMessage<Pay_Notify_Transaction_Payer> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 1, 0);

/**
 * @generated from message wechat.Pay.Notify.Transaction.Amount
 */
export type Pay_Notify_Transaction_Amount = Message<"wechat.Pay.Notify.Transaction.Amount"> & {
  /**
   * 总金额
   *
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * 用户支付金额
   *
   * @generated from field: int32 payer_total = 2;
   */
  payerTotal: number;

  /**
   * 货币类型
   *
   * @generated from field: string currency = 3;
   */
  currency: string;

  /**
   * 用户支付币种
   *
   * @generated from field: string payer_currency = 4;
   */
  payerCurrency: string;
};

/**
 * Describes the message wechat.Pay.Notify.Transaction.Amount.
 * Use `create(Pay_Notify_Transaction_AmountSchema)` to create a new message.
 */
export const Pay_Notify_Transaction_AmountSchema: GenMessage<Pay_Notify_Transaction_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 1, 1);

/**
 * @generated from message wechat.Pay.Notify.Transaction.SceneInfo
 */
export type Pay_Notify_Transaction_SceneInfo = Message<"wechat.Pay.Notify.Transaction.SceneInfo"> & {
  /**
   * 商户端设备号
   *
   * @generated from field: optional string device_id = 1;
   */
  deviceId?: string;
};

/**
 * Describes the message wechat.Pay.Notify.Transaction.SceneInfo.
 * Use `create(Pay_Notify_Transaction_SceneInfoSchema)` to create a new message.
 */
export const Pay_Notify_Transaction_SceneInfoSchema: GenMessage<Pay_Notify_Transaction_SceneInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 1, 2);

/**
 * @generated from message wechat.Pay.Notify.Transaction.PromotionDetail
 */
export type Pay_Notify_Transaction_PromotionDetail = Message<"wechat.Pay.Notify.Transaction.PromotionDetail"> & {
  /**
   * 券ID
   *
   * @generated from field: string coupon_id = 1;
   */
  couponId: string;

  /**
   * 优惠名称
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * 优惠范围
   *
   * @generated from field: optional string scope = 3;
   */
  scope?: string;

  /**
   * 优惠类型
   *
   * @generated from field: optional string type = 4;
   */
  type?: string;

  /**
   * 优惠券面额
   *
   * @generated from field: int64 amount = 5;
   */
  amount: bigint;

  /**
   * 活动ID
   *
   * @generated from field: optional string stock_id = 6;
   */
  stockId?: string;

  /**
   * 微信出资
   *
   * @generated from field: optional int64 wechatpay_contribute = 7;
   */
  wechatpayContribute?: bigint;

  /**
   * 商户出资
   *
   * @generated from field: optional int64 merchant_contribute = 8;
   */
  merchantContribute?: bigint;

  /**
   * 其他出资
   *
   * @generated from field: optional int64 other_contribute = 9;
   */
  otherContribute?: bigint;

  /**
   * 优惠币种
   *
   * @generated from field: optional string currency = 10;
   */
  currency?: string;

  /**
   * @generated from field: repeated wechat.Pay.Notify.Transaction.PromotionDetail.GoodsDetail goods_detail = 11;
   */
  goodsDetail: Pay_Notify_Transaction_PromotionDetail_GoodsDetail[];
};

/**
 * Describes the message wechat.Pay.Notify.Transaction.PromotionDetail.
 * Use `create(Pay_Notify_Transaction_PromotionDetailSchema)` to create a new message.
 */
export const Pay_Notify_Transaction_PromotionDetailSchema: GenMessage<Pay_Notify_Transaction_PromotionDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 1, 3);

/**
 * @generated from message wechat.Pay.Notify.Transaction.PromotionDetail.GoodsDetail
 */
export type Pay_Notify_Transaction_PromotionDetail_GoodsDetail = Message<"wechat.Pay.Notify.Transaction.PromotionDetail.GoodsDetail"> & {
  /**
   * 商品编码
   *
   * @generated from field: string goods_id = 1;
   */
  goodsId: string;

  /**
   * 商品数量
   *
   * @generated from field: int64 quantity = 2;
   */
  quantity: bigint;

  /**
   * 商品单价
   *
   * @generated from field: int64 unit_price = 3;
   */
  unitPrice: bigint;

  /**
   * 商品优惠金额
   *
   * @generated from field: int64 discount_amount = 4;
   */
  discountAmount: bigint;

  /**
   * 商品备注
   *
   * @generated from field: optional string goods_remark = 5;
   */
  goodsRemark?: string;
};

/**
 * Describes the message wechat.Pay.Notify.Transaction.PromotionDetail.GoodsDetail.
 * Use `create(Pay_Notify_Transaction_PromotionDetail_GoodsDetailSchema)` to create a new message.
 */
export const Pay_Notify_Transaction_PromotionDetail_GoodsDetailSchema: GenMessage<Pay_Notify_Transaction_PromotionDetail_GoodsDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 1, 3, 0);

/**
 * @generated from message wechat.Pay.Notify.Refund
 */
export type Pay_Notify_Refund = Message<"wechat.Pay.Notify.Refund"> & {
  /**
   * 直连商户号
   *
   * @generated from field: string mchid = 1;
   */
  mchid: string;

  /**
   * 商户订单号
   *
   * @generated from field: string out_trade_no = 2;
   */
  outTradeNo: string;

  /**
   * 微信支付订单号
   *
   * @generated from field: string transaction_id = 3;
   */
  transactionId: string;

  /**
   * 商户退款单号
   *
   * @generated from field: string out_refund_no = 4;
   */
  outRefundNo: string;

  /**
   * 微信支付退款单号
   *
   * @generated from field: string refund_id = 5;
   */
  refundId: string;

  /**
   * 退款状态
   *
   * @generated from field: string refund_status = 6;
   */
  refundStatus: string;

  /**
   * 退款成功时间
   *
   * @generated from field: optional string success_time = 7;
   */
  successTime?: string;

  /**
   * 退款入账账户
   *
   * @generated from field: string user_received_account = 8;
   */
  userReceivedAccount: string;

  /**
   * @generated from field: wechat.Pay.Notify.Refund.Amount amount = 9;
   */
  amount?: Pay_Notify_Refund_Amount;
};

/**
 * Describes the message wechat.Pay.Notify.Refund.
 * Use `create(Pay_Notify_RefundSchema)` to create a new message.
 */
export const Pay_Notify_RefundSchema: GenMessage<Pay_Notify_Refund> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 2);

/**
 * @generated from message wechat.Pay.Notify.Refund.Amount
 */
export type Pay_Notify_Refund_Amount = Message<"wechat.Pay.Notify.Refund.Amount"> & {
  /**
   * 订单金额
   *
   * @generated from field: int64 total = 1;
   */
  total: bigint;

  /**
   * 退款金额
   *
   * @generated from field: int64 refund = 2;
   */
  refund: bigint;

  /**
   * 用户支付金额
   *
   * @generated from field: int64 payer_total = 3;
   */
  payerTotal: bigint;

  /**
   * 用户退款金额
   *
   * @generated from field: int64 payer_refund = 4;
   */
  payerRefund: bigint;
};

/**
 * Describes the message wechat.Pay.Notify.Refund.Amount.
 * Use `create(Pay_Notify_Refund_AmountSchema)` to create a new message.
 */
export const Pay_Notify_Refund_AmountSchema: GenMessage<Pay_Notify_Refund_Amount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 6, 2, 0);

/**
 * @generated from message wechat.Pay.Ecommerce
 */
export type Pay_Ecommerce = Message<"wechat.Pay.Ecommerce"> & {
};

/**
 * Describes the message wechat.Pay.Ecommerce.
 * Use `create(Pay_EcommerceSchema)` to create a new message.
 */
export const Pay_EcommerceSchema: GenMessage<Pay_Ecommerce> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments
 */
export type Pay_Ecommerce_CreateApplyments = Message<"wechat.Pay.Ecommerce.CreateApplyments"> & {
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.
 * Use `create(Pay_Ecommerce_CreateApplymentsSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplymentsSchema: GenMessage<Pay_Ecommerce_CreateApplyments> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request
 */
export type Pay_Ecommerce_CreateApplyments_Request = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request"> & {
  /**
   * @generated from field: string out_request_no = 1;
   */
  outRequestNo: string;

  /**
   * @generated from field: string organization_type = 2;
   */
  organizationType: string;

  /**
   * @generated from field: bool finance_institution = 3;
   */
  financeInstitution: boolean;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.BusinessLicenseInfo business_license_info = 4;
   */
  businessLicenseInfo?: Pay_Ecommerce_CreateApplyments_Request_BusinessLicenseInfo;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.FinancialLicenseInfo financial_license_info = 5;
   */
  financialLicenseInfo?: Pay_Ecommerce_CreateApplyments_Request_FinancialLicenseInfo;

  /**
   * @generated from field: optional string id_holder_type = 6;
   */
  idHolderType?: string;

  /**
   * @generated from field: optional string id_doc_type = 7;
   */
  idDocType?: string;

  /**
   * @generated from field: optional string authorize_letter_copy = 8;
   */
  authorizeLetterCopy?: string;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.IdCardInfo id_card_info = 9;
   */
  idCardInfo?: Pay_Ecommerce_CreateApplyments_Request_IdCardInfo;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.IdDocInfo id_doc_info = 10;
   */
  idDocInfo?: Pay_Ecommerce_CreateApplyments_Request_IdDocInfo;

  /**
   * @generated from field: bool owner = 11;
   */
  owner: boolean;

  /**
   * @generated from field: repeated wechat.Pay.Ecommerce.CreateApplyments.Request.UboInfo ubo_info_list = 12;
   */
  uboInfoList: Pay_Ecommerce_CreateApplyments_Request_UboInfo[];

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.AccountInfo account_info = 13;
   */
  accountInfo?: Pay_Ecommerce_CreateApplyments_Request_AccountInfo;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.ContactInfo contact_info = 14;
   */
  contactInfo?: Pay_Ecommerce_CreateApplyments_Request_ContactInfo;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.SalesSceneInfo sales_scene_info = 15;
   */
  salesSceneInfo?: Pay_Ecommerce_CreateApplyments_Request_SalesSceneInfo;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.CreateApplyments.Request.SettleInfo settle_info = 16;
   */
  settleInfo?: Pay_Ecommerce_CreateApplyments_Request_SettleInfo;

  /**
   * @generated from field: string merchant_shortname = 17;
   */
  merchantShortname: string;

  /**
   * @generated from field: optional string qualifications = 18;
   */
  qualifications?: string;

  /**
   * @generated from field: optional string business_addition_pics = 19;
   */
  businessAdditionPics?: string;

  /**
   * @generated from field: optional string business_addition_desc = 20;
   */
  businessAdditionDesc?: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.
 * Use `create(Pay_Ecommerce_CreateApplyments_RequestSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_RequestSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.BusinessLicenseInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_BusinessLicenseInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.BusinessLicenseInfo"> & {
  /**
   * @generated from field: optional string cert_type = 1;
   */
  certType?: string;

  /**
   * @generated from field: string business_license_copy = 2;
   */
  businessLicenseCopy: string;

  /**
   * @generated from field: string business_license_number = 3;
   */
  businessLicenseNumber: string;

  /**
   * @generated from field: string merchant_name = 4;
   */
  merchantName: string;

  /**
   * @generated from field: string legal_person = 5;
   */
  legalPerson: string;

  /**
   * @generated from field: optional string company_address = 6;
   */
  companyAddress?: string;

  /**
   * @generated from field: optional string business_time = 7;
   */
  businessTime?: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.BusinessLicenseInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_BusinessLicenseInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_BusinessLicenseInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_BusinessLicenseInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 0);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.FinancialLicenseInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_FinancialLicenseInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.FinancialLicenseInfo"> & {
  /**
   * @generated from field: string finance_type = 1;
   */
  financeType: string;

  /**
   * @generated from field: repeated string finance_license_pics = 2;
   */
  financeLicensePics: string[];
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.FinancialLicenseInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_FinancialLicenseInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_FinancialLicenseInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_FinancialLicenseInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 1);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.IdCardInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_IdCardInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.IdCardInfo"> & {
  /**
   * @generated from field: string id_card_copy = 1;
   */
  idCardCopy: string;

  /**
   * @generated from field: string id_card_national = 2;
   */
  idCardNational: string;

  /**
   * @generated from field: string id_card_name = 3;
   */
  idCardName: string;

  /**
   * @generated from field: string id_card_number = 4;
   */
  idCardNumber: string;

  /**
   * @generated from field: optional string id_card_address = 5;
   */
  idCardAddress?: string;

  /**
   * @generated from field: string id_card_valid_time_begin = 6;
   */
  idCardValidTimeBegin: string;

  /**
   * @generated from field: string id_card_valid_time = 7;
   */
  idCardValidTime: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.IdCardInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_IdCardInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_IdCardInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_IdCardInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 2);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.IdDocInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_IdDocInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.IdDocInfo"> & {
  /**
   * @generated from field: string id_doc_copy = 1;
   */
  idDocCopy: string;

  /**
   * @generated from field: optional string id_doc_copy_back = 2;
   */
  idDocCopyBack?: string;

  /**
   * @generated from field: string id_doc_name = 3;
   */
  idDocName: string;

  /**
   * @generated from field: string id_doc_number = 4;
   */
  idDocNumber: string;

  /**
   * @generated from field: optional string id_doc_address = 5;
   */
  idDocAddress?: string;

  /**
   * @generated from field: string doc_period_begin = 6;
   */
  docPeriodBegin: string;

  /**
   * @generated from field: string doc_period_end = 7;
   */
  docPeriodEnd: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.IdDocInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_IdDocInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_IdDocInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_IdDocInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 3);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.UboInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_UboInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.UboInfo"> & {
  /**
   * @generated from field: string ubo_id_doc_type = 1;
   */
  uboIdDocType: string;

  /**
   * @generated from field: string ubo_id_doc_copy = 2;
   */
  uboIdDocCopy: string;

  /**
   * @generated from field: optional string ubo_id_doc_copy_back = 3;
   */
  uboIdDocCopyBack?: string;

  /**
   * @generated from field: string ubo_id_doc_name = 4;
   */
  uboIdDocName: string;

  /**
   * @generated from field: string ubo_id_doc_number = 5;
   */
  uboIdDocNumber: string;

  /**
   * @generated from field: string ubo_id_doc_address = 6;
   */
  uboIdDocAddress: string;

  /**
   * @generated from field: string ubo_id_doc_period_begin = 7;
   */
  uboIdDocPeriodBegin: string;

  /**
   * @generated from field: string ubo_id_doc_period_end = 8;
   */
  uboIdDocPeriodEnd: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.UboInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_UboInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_UboInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_UboInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 4);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.AccountInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_AccountInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.AccountInfo"> & {
  /**
   * @generated from field: string bank_account_type = 1;
   */
  bankAccountType: string;

  /**
   * @generated from field: string account_bank = 2;
   */
  accountBank: string;

  /**
   * @generated from field: string account_name = 3;
   */
  accountName: string;

  /**
   * @generated from field: string bank_address_code = 4;
   */
  bankAddressCode: string;

  /**
   * @generated from field: optional string bank_branch_id = 5;
   */
  bankBranchId?: string;

  /**
   * @generated from field: optional string bank_name = 6;
   */
  bankName?: string;

  /**
   * @generated from field: string account_number = 7;
   */
  accountNumber: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.AccountInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_AccountInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_AccountInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_AccountInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 5);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.ContactInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_ContactInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.ContactInfo"> & {
  /**
   * @generated from field: string contact_type = 1;
   */
  contactType: string;

  /**
   * @generated from field: string contact_name = 2;
   */
  contactName: string;

  /**
   * @generated from field: optional string contact_id_doc_type = 3;
   */
  contactIdDocType?: string;

  /**
   * @generated from field: optional string contact_id_card_number = 4;
   */
  contactIdCardNumber?: string;

  /**
   * @generated from field: optional string contact_id_doc_copy = 5;
   */
  contactIdDocCopy?: string;

  /**
   * @generated from field: optional string contact_id_doc_copy_back = 6;
   */
  contactIdDocCopyBack?: string;

  /**
   * @generated from field: optional string contact_id_doc_period_begin = 7;
   */
  contactIdDocPeriodBegin?: string;

  /**
   * @generated from field: optional string contact_id_doc_period_end = 8;
   */
  contactIdDocPeriodEnd?: string;

  /**
   * @generated from field: optional string business_authorization_letter = 9;
   */
  businessAuthorizationLetter?: string;

  /**
   * @generated from field: string mobile_phone = 10;
   */
  mobilePhone: string;

  /**
   * @generated from field: optional string contact_email = 11;
   */
  contactEmail?: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.ContactInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_ContactInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_ContactInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_ContactInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 6);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.SalesSceneInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_SalesSceneInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.SalesSceneInfo"> & {
  /**
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * @generated from field: optional string store_url = 2;
   */
  storeUrl?: string;

  /**
   * @generated from field: optional string store_qr_code = 3;
   */
  storeQrCode?: string;

  /**
   * @generated from field: optional string mini_program_sub_appid = 4;
   */
  miniProgramSubAppid?: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.SalesSceneInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_SalesSceneInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_SalesSceneInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_SalesSceneInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 7);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Request.SettleInfo
 */
export type Pay_Ecommerce_CreateApplyments_Request_SettleInfo = Message<"wechat.Pay.Ecommerce.CreateApplyments.Request.SettleInfo"> & {
  /**
   * @generated from field: optional string settlement_id = 1;
   */
  settlementId?: string;

  /**
   * @generated from field: optional string qualification_type = 2;
   */
  qualificationType?: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Request.SettleInfo.
 * Use `create(Pay_Ecommerce_CreateApplyments_Request_SettleInfoSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_Request_SettleInfoSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Request_SettleInfo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 0, 8);

/**
 * @generated from message wechat.Pay.Ecommerce.CreateApplyments.Response
 */
export type Pay_Ecommerce_CreateApplyments_Response = Message<"wechat.Pay.Ecommerce.CreateApplyments.Response"> & {
  /**
   * @generated from field: uint64 applyment_id = 1;
   */
  applymentId: bigint;

  /**
   * @generated from field: string out_request_no = 2;
   */
  outRequestNo: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.CreateApplyments.Response.
 * Use `create(Pay_Ecommerce_CreateApplyments_ResponseSchema)` to create a new message.
 */
export const Pay_Ecommerce_CreateApplyments_ResponseSchema: GenMessage<Pay_Ecommerce_CreateApplyments_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 0, 1);

/**
 * @generated from message wechat.Pay.Ecommerce.QueryApplyments
 */
export type Pay_Ecommerce_QueryApplyments = Message<"wechat.Pay.Ecommerce.QueryApplyments"> & {
};

/**
 * Describes the message wechat.Pay.Ecommerce.QueryApplyments.
 * Use `create(Pay_Ecommerce_QueryApplymentsSchema)` to create a new message.
 */
export const Pay_Ecommerce_QueryApplymentsSchema: GenMessage<Pay_Ecommerce_QueryApplyments> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 1);

/**
 * @generated from message wechat.Pay.Ecommerce.QueryApplyments.Request
 */
export type Pay_Ecommerce_QueryApplyments_Request = Message<"wechat.Pay.Ecommerce.QueryApplyments.Request"> & {
  /**
   * @generated from field: optional uint64 applyment_id = 1;
   */
  applymentId?: bigint;

  /**
   * @generated from field: optional string out_request_no = 2;
   */
  outRequestNo?: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.QueryApplyments.Request.
 * Use `create(Pay_Ecommerce_QueryApplyments_RequestSchema)` to create a new message.
 */
export const Pay_Ecommerce_QueryApplyments_RequestSchema: GenMessage<Pay_Ecommerce_QueryApplyments_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 1, 0);

/**
 * @generated from message wechat.Pay.Ecommerce.QueryApplyments.Response
 */
export type Pay_Ecommerce_QueryApplyments_Response = Message<"wechat.Pay.Ecommerce.QueryApplyments.Response"> & {
  /**
   * @generated from field: string applyment_state = 1;
   */
  applymentState: string;

  /**
   * @generated from field: string applyment_state_desc = 2;
   */
  applymentStateDesc: string;

  /**
   * @generated from field: optional string sign_state = 3;
   */
  signState?: string;

  /**
   * @generated from field: optional string sign_url = 4;
   */
  signUrl?: string;

  /**
   * @generated from field: optional string sub_mchid = 5;
   */
  subMchid?: string;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.QueryApplyments.Response.AccountValidation account_validation = 6;
   */
  accountValidation?: Pay_Ecommerce_QueryApplyments_Response_AccountValidation;

  /**
   * @generated from field: optional wechat.Pay.Ecommerce.QueryApplyments.Response.AuditDetail audit_detail = 7;
   */
  auditDetail?: Pay_Ecommerce_QueryApplyments_Response_AuditDetail;

  /**
   * @generated from field: optional string legal_validation_url = 8;
   */
  legalValidationUrl?: string;

  /**
   * @generated from field: string out_request_no = 9;
   */
  outRequestNo: string;

  /**
   * @generated from field: uint64 applyment_id = 10;
   */
  applymentId: bigint;
};

/**
 * Describes the message wechat.Pay.Ecommerce.QueryApplyments.Response.
 * Use `create(Pay_Ecommerce_QueryApplyments_ResponseSchema)` to create a new message.
 */
export const Pay_Ecommerce_QueryApplyments_ResponseSchema: GenMessage<Pay_Ecommerce_QueryApplyments_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 1, 1);

/**
 * @generated from message wechat.Pay.Ecommerce.QueryApplyments.Response.AccountValidation
 */
export type Pay_Ecommerce_QueryApplyments_Response_AccountValidation = Message<"wechat.Pay.Ecommerce.QueryApplyments.Response.AccountValidation"> & {
  /**
   * @generated from field: string account_name = 1;
   */
  accountName: string;

  /**
   * @generated from field: string account_no = 2;
   */
  accountNo: string;

  /**
   * @generated from field: int32 pay_amount = 3;
   */
  payAmount: number;

  /**
   * @generated from field: string destination_account_number = 4;
   */
  destinationAccountNumber: string;

  /**
   * @generated from field: string destination_account_name = 5;
   */
  destinationAccountName: string;

  /**
   * @generated from field: string destination_account_bank = 6;
   */
  destinationAccountBank: string;

  /**
   * @generated from field: string city = 7;
   */
  city: string;

  /**
   * @generated from field: string remark = 8;
   */
  remark: string;

  /**
   * @generated from field: string deadline = 9;
   */
  deadline: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.QueryApplyments.Response.AccountValidation.
 * Use `create(Pay_Ecommerce_QueryApplyments_Response_AccountValidationSchema)` to create a new message.
 */
export const Pay_Ecommerce_QueryApplyments_Response_AccountValidationSchema: GenMessage<Pay_Ecommerce_QueryApplyments_Response_AccountValidation> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 1, 1, 0);

/**
 * @generated from message wechat.Pay.Ecommerce.QueryApplyments.Response.AuditDetail
 */
export type Pay_Ecommerce_QueryApplyments_Response_AuditDetail = Message<"wechat.Pay.Ecommerce.QueryApplyments.Response.AuditDetail"> & {
  /**
   * @generated from field: string param_name = 1;
   */
  paramName: string;

  /**
   * @generated from field: string reject_reason = 2;
   */
  rejectReason: string;
};

/**
 * Describes the message wechat.Pay.Ecommerce.QueryApplyments.Response.AuditDetail.
 * Use `create(Pay_Ecommerce_QueryApplyments_Response_AuditDetailSchema)` to create a new message.
 */
export const Pay_Ecommerce_QueryApplyments_Response_AuditDetailSchema: GenMessage<Pay_Ecommerce_QueryApplyments_Response_AuditDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 7, 1, 1, 1);

/**
 * @generated from message wechat.Pay.Merchant
 */
export type Pay_Merchant = Message<"wechat.Pay.Merchant"> & {
};

/**
 * Describes the message wechat.Pay.Merchant.
 * Use `create(Pay_MerchantSchema)` to create a new message.
 */
export const Pay_MerchantSchema: GenMessage<Pay_Merchant> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 8);

/**
 * @generated from message wechat.Pay.Merchant.UploadMedia
 */
export type Pay_Merchant_UploadMedia = Message<"wechat.Pay.Merchant.UploadMedia"> & {
};

/**
 * Describes the message wechat.Pay.Merchant.UploadMedia.
 * Use `create(Pay_Merchant_UploadMediaSchema)` to create a new message.
 */
export const Pay_Merchant_UploadMediaSchema: GenMessage<Pay_Merchant_UploadMedia> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 8, 0);

/**
 * @generated from message wechat.Pay.Merchant.UploadMedia.Request
 */
export type Pay_Merchant_UploadMedia_Request = Message<"wechat.Pay.Merchant.UploadMedia.Request"> & {
  /**
   * @generated from field: string filename = 1;
   */
  filename: string;

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message wechat.Pay.Merchant.UploadMedia.Request.
 * Use `create(Pay_Merchant_UploadMedia_RequestSchema)` to create a new message.
 */
export const Pay_Merchant_UploadMedia_RequestSchema: GenMessage<Pay_Merchant_UploadMedia_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 8, 0, 0);

/**
 * @generated from message wechat.Pay.Merchant.UploadMedia.Response
 */
export type Pay_Merchant_UploadMedia_Response = Message<"wechat.Pay.Merchant.UploadMedia.Response"> & {
  /**
   * @generated from field: string media_id = 1;
   */
  mediaId: string;
};

/**
 * Describes the message wechat.Pay.Merchant.UploadMedia.Response.
 * Use `create(Pay_Merchant_UploadMedia_ResponseSchema)` to create a new message.
 */
export const Pay_Merchant_UploadMedia_ResponseSchema: GenMessage<Pay_Merchant_UploadMedia_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 8, 0, 1);

/**
 * @generated from message wechat.Pay.Merchant.UploadMediaVideo
 */
export type Pay_Merchant_UploadMediaVideo = Message<"wechat.Pay.Merchant.UploadMediaVideo"> & {
};

/**
 * Describes the message wechat.Pay.Merchant.UploadMediaVideo.
 * Use `create(Pay_Merchant_UploadMediaVideoSchema)` to create a new message.
 */
export const Pay_Merchant_UploadMediaVideoSchema: GenMessage<Pay_Merchant_UploadMediaVideo> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 8, 1);

/**
 * @generated from message wechat.Pay.Merchant.UploadMediaVideo.Request
 */
export type Pay_Merchant_UploadMediaVideo_Request = Message<"wechat.Pay.Merchant.UploadMediaVideo.Request"> & {
  /**
   * @generated from field: string filename = 1;
   */
  filename: string;

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message wechat.Pay.Merchant.UploadMediaVideo.Request.
 * Use `create(Pay_Merchant_UploadMediaVideo_RequestSchema)` to create a new message.
 */
export const Pay_Merchant_UploadMediaVideo_RequestSchema: GenMessage<Pay_Merchant_UploadMediaVideo_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 8, 1, 0);

/**
 * @generated from message wechat.Pay.Merchant.UploadMediaVideo.Response
 */
export type Pay_Merchant_UploadMediaVideo_Response = Message<"wechat.Pay.Merchant.UploadMediaVideo.Response"> & {
  /**
   * @generated from field: string media_id = 1;
   */
  mediaId: string;
};

/**
 * Describes the message wechat.Pay.Merchant.UploadMediaVideo.Response.
 * Use `create(Pay_Merchant_UploadMediaVideo_ResponseSchema)` to create a new message.
 */
export const Pay_Merchant_UploadMediaVideo_ResponseSchema: GenMessage<Pay_Merchant_UploadMediaVideo_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 8, 1, 1);

/**
 * @generated from message wechat.Pay.ProfitSharing
 */
export type Pay_ProfitSharing = Message<"wechat.Pay.ProfitSharing"> & {
};

/**
 * Describes the message wechat.Pay.ProfitSharing.
 * Use `create(Pay_ProfitSharingSchema)` to create a new message.
 */
export const Pay_ProfitSharingSchema: GenMessage<Pay_ProfitSharing> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders
 */
export type Pay_ProfitSharing_Orders = Message<"wechat.Pay.ProfitSharing.Orders"> & {
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.
 * Use `create(Pay_ProfitSharing_OrdersSchema)` to create a new message.
 */
export const Pay_ProfitSharing_OrdersSchema: GenMessage<Pay_ProfitSharing_Orders> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.OrderReceiverDetail
 */
export type Pay_ProfitSharing_Orders_OrderReceiverDetail = Message<"wechat.Pay.ProfitSharing.Orders.OrderReceiverDetail"> & {
  /**
   * @generated from field: int32 amount = 1;
   */
  amount: number;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * @generated from field: string account = 4;
   */
  account: string;

  /**
   * @generated from field: string result = 5;
   */
  result: string;

  /**
   * @generated from field: optional string fail_reason = 6;
   */
  failReason?: string;

  /**
   * @generated from field: string create_time = 7;
   */
  createTime: string;

  /**
   * @generated from field: string finish_time = 8;
   */
  finishTime: string;

  /**
   * @generated from field: string detail_id = 9;
   */
  detailId: string;
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.OrderReceiverDetail.
 * Use `create(Pay_ProfitSharing_Orders_OrderReceiverDetailSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_OrderReceiverDetailSchema: GenMessage<Pay_ProfitSharing_Orders_OrderReceiverDetail> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 0);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.CreateOrder
 */
export type Pay_ProfitSharing_Orders_CreateOrder = Message<"wechat.Pay.ProfitSharing.Orders.CreateOrder"> & {
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.CreateOrder.
 * Use `create(Pay_ProfitSharing_Orders_CreateOrderSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_CreateOrderSchema: GenMessage<Pay_ProfitSharing_Orders_CreateOrder> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 1);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.CreateOrder.Request
 */
export type Pay_ProfitSharing_Orders_CreateOrder_Request = Message<"wechat.Pay.ProfitSharing.Orders.CreateOrder.Request"> & {
  /**
   * @generated from field: string appid = 1;
   */
  appid: string;

  /**
   * @generated from field: string transaction_id = 2;
   */
  transactionId: string;

  /**
   * @generated from field: string out_order_no = 3;
   */
  outOrderNo: string;

  /**
   * @generated from field: repeated wechat.Pay.ProfitSharing.Orders.CreateOrder.Request.CreateOrderReceiver receivers = 4;
   */
  receivers: Pay_ProfitSharing_Orders_CreateOrder_Request_CreateOrderReceiver[];

  /**
   * @generated from field: bool unfreeze_unsplit = 5;
   */
  unfreezeUnsplit: boolean;
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.CreateOrder.Request.
 * Use `create(Pay_ProfitSharing_Orders_CreateOrder_RequestSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_CreateOrder_RequestSchema: GenMessage<Pay_ProfitSharing_Orders_CreateOrder_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 1, 0);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.CreateOrder.Request.CreateOrderReceiver
 */
export type Pay_ProfitSharing_Orders_CreateOrder_Request_CreateOrderReceiver = Message<"wechat.Pay.ProfitSharing.Orders.CreateOrder.Request.CreateOrderReceiver"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: int32 amount = 4;
   */
  amount: number;

  /**
   * @generated from field: string description = 5;
   */
  description: string;
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.CreateOrder.Request.CreateOrderReceiver.
 * Use `create(Pay_ProfitSharing_Orders_CreateOrder_Request_CreateOrderReceiverSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_CreateOrder_Request_CreateOrderReceiverSchema: GenMessage<Pay_ProfitSharing_Orders_CreateOrder_Request_CreateOrderReceiver> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 1, 0, 0);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.CreateOrder.Response
 */
export type Pay_ProfitSharing_Orders_CreateOrder_Response = Message<"wechat.Pay.ProfitSharing.Orders.CreateOrder.Response"> & {
  /**
   * @generated from field: string transaction_id = 1;
   */
  transactionId: string;

  /**
   * @generated from field: string out_order_no = 2;
   */
  outOrderNo: string;

  /**
   * @generated from field: string order_id = 3;
   */
  orderId: string;

  /**
   * @generated from field: string state = 4;
   */
  state: string;

  /**
   * @generated from field: repeated wechat.Pay.ProfitSharing.Orders.OrderReceiverDetail receiver_details = 5;
   */
  receiverDetails: Pay_ProfitSharing_Orders_OrderReceiverDetail[];
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.CreateOrder.Response.
 * Use `create(Pay_ProfitSharing_Orders_CreateOrder_ResponseSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_CreateOrder_ResponseSchema: GenMessage<Pay_ProfitSharing_Orders_CreateOrder_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 1, 1);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.QueryOrder
 */
export type Pay_ProfitSharing_Orders_QueryOrder = Message<"wechat.Pay.ProfitSharing.Orders.QueryOrder"> & {
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.QueryOrder.
 * Use `create(Pay_ProfitSharing_Orders_QueryOrderSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_QueryOrderSchema: GenMessage<Pay_ProfitSharing_Orders_QueryOrder> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 2);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.QueryOrder.Request
 */
export type Pay_ProfitSharing_Orders_QueryOrder_Request = Message<"wechat.Pay.ProfitSharing.Orders.QueryOrder.Request"> & {
  /**
   * @generated from field: string out_order_no = 1;
   */
  outOrderNo: string;

  /**
   * @generated from field: string transaction_id = 2;
   */
  transactionId: string;
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.QueryOrder.Request.
 * Use `create(Pay_ProfitSharing_Orders_QueryOrder_RequestSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_QueryOrder_RequestSchema: GenMessage<Pay_ProfitSharing_Orders_QueryOrder_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 2, 0);

/**
 * @generated from message wechat.Pay.ProfitSharing.Orders.QueryOrder.Response
 */
export type Pay_ProfitSharing_Orders_QueryOrder_Response = Message<"wechat.Pay.ProfitSharing.Orders.QueryOrder.Response"> & {
  /**
   * @generated from field: string transaction_id = 1;
   */
  transactionId: string;

  /**
   * @generated from field: string out_order_no = 2;
   */
  outOrderNo: string;

  /**
   * @generated from field: string order_id = 3;
   */
  orderId: string;

  /**
   * @generated from field: string state = 4;
   */
  state: string;

  /**
   * @generated from field: repeated wechat.Pay.ProfitSharing.Orders.OrderReceiverDetail receiver_details = 5;
   */
  receiverDetails: Pay_ProfitSharing_Orders_OrderReceiverDetail[];
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Orders.QueryOrder.Response.
 * Use `create(Pay_ProfitSharing_Orders_QueryOrder_ResponseSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Orders_QueryOrder_ResponseSchema: GenMessage<Pay_ProfitSharing_Orders_QueryOrder_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 0, 2, 1);

/**
 * @generated from message wechat.Pay.ProfitSharing.Transactions
 */
export type Pay_ProfitSharing_Transactions = Message<"wechat.Pay.ProfitSharing.Transactions"> & {
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Transactions.
 * Use `create(Pay_ProfitSharing_TransactionsSchema)` to create a new message.
 */
export const Pay_ProfitSharing_TransactionsSchema: GenMessage<Pay_ProfitSharing_Transactions> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 1);

/**
 * @generated from message wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount
 */
export type Pay_ProfitSharing_Transactions_QueryOrderAmount = Message<"wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount"> & {
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount.
 * Use `create(Pay_ProfitSharing_Transactions_QueryOrderAmountSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Transactions_QueryOrderAmountSchema: GenMessage<Pay_ProfitSharing_Transactions_QueryOrderAmount> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 1, 0);

/**
 * @generated from message wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount.Request
 */
export type Pay_ProfitSharing_Transactions_QueryOrderAmount_Request = Message<"wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount.Request"> & {
  /**
   * @generated from field: string transaction_id = 1;
   */
  transactionId: string;
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount.Request.
 * Use `create(Pay_ProfitSharing_Transactions_QueryOrderAmount_RequestSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Transactions_QueryOrderAmount_RequestSchema: GenMessage<Pay_ProfitSharing_Transactions_QueryOrderAmount_Request> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 1, 0, 0);

/**
 * @generated from message wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount.Response
 */
export type Pay_ProfitSharing_Transactions_QueryOrderAmount_Response = Message<"wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount.Response"> & {
  /**
   * @generated from field: string transaction_id = 1;
   */
  transactionId: string;

  /**
   * @generated from field: int32 unsplit_amount = 2;
   */
  unsplitAmount: number;
};

/**
 * Describes the message wechat.Pay.ProfitSharing.Transactions.QueryOrderAmount.Response.
 * Use `create(Pay_ProfitSharing_Transactions_QueryOrderAmount_ResponseSchema)` to create a new message.
 */
export const Pay_ProfitSharing_Transactions_QueryOrderAmount_ResponseSchema: GenMessage<Pay_ProfitSharing_Transactions_QueryOrderAmount_Response> = /*@__PURE__*/
  messageDesc(file_wechat_pay, 0, 9, 1, 0, 1);

